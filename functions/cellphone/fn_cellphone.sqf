if (!hasInterface) exitWith {}; private["_mode","_units","_type","_filter","_list","_sortArr","_msgshort","_seconds","_minutes","_hours"]; _mode = param[0,0,[0]]; disableSerialization; waitUntil {!isNull findDisplay 3000}; _units = (findDisplay 3000) displayCtrl 3002; lbClear _units; if(_mode isEqualTo 0) then { _list = (findDisplay 3000) displayCtrl 3006; _filter = ((findDisplay 3000) displayCtrl 3005); ((findDisplay 3000) displayCtrl 3008) ctrlSetStructuredText parseText format["%1", localize "STR_CELL_No_Choosen"]; lbClear _list; lbClear _filter; _sortArr = [zero_var_messages, 2, "desc"] call KRON_ArraySort; if ((count _sortArr) == 0) then { _list lbAdd localize "STR_CELL_No_Msg"; _list lbSetData [(lbSize _list)-1,"Null"]; }; { _seconds = floor (serverTime - (_x select 2)); if (_seconds >= 60) then {_minutes = floor (_seconds / 60); _seconds = (_seconds - (60 * _minutes));} else {_minutes = 0;}; if (_minutes >= 60) then {_hours = floor (_minutes / 60); _minutes = (_minutes - (60 * _hours));} else {_hours = 0;}; if (_seconds <= 9) then {_seconds = format["0%1",_seconds];}; if (_minutes <= 9) then {_minutes = format["0%1",_minutes];}; if (_hours <= 9) then {_hours = format["0%1",_hours];}; if (count str(_x select 0) <= 54) then { _list lbAdd format["%1 (vor %3:%4:%5): %2", _x select 1, _x select 0, _hours, _minutes, _seconds]; } else { _msgshort = [_x select 0,51] call KRON_StrLeft; _list lbAdd format["%1 (vor %3:%4:%5): %2 ...", _x select 1, _msgshort, _hours, _minutes, _seconds]; }; _list lbSetData [(lbSize _list)-1,str(_x)]; } forEach _sortArr; _filter lbAdd localize "STR_CELL_SelPlayer"; _filter lbSetData [(lbSize _filter)-1,localize "STR_CELL_SelPlayer"]; _filter lbAdd localize "STR_CELL_TextPolice"; _filter lbSetData [(lbSize _filter)-1,localize "STR_CELL_TextPolice"]; _filter lbAdd localize "STR_CELL_EMSRequest";
_filter lbSetData [(lbSize _filter)-1,localize "STR_CELL_EMSRequest"]; _filter lbAdd localize "STR_CELL_TextGang"; _filter lbSetData [(lbSize _filter)-1,localize "STR_CELL_TextGang"]; _filter lbAdd localize "STR_CELL_TextAdmins"; _filter lbSetData [(lbSize _filter)-1,localize "STR_CELL_TextAdmins"]; if((call(zero_var_copLevel) > 3) || (call(zero_var_adminLevel) > 0)) then { _filter lbAdd localize "STR_CELL_PoliceMSGAll"; _filter lbSetData [(lbSize _filter)-1,localize "STR_CELL_PoliceMSGAll"]; }; if((call(zero_var_sekLevel) > 1) || (call(zero_var_adminLevel) > 0)) then { _filter lbAdd localize "STR_CELL_SekMSGAll"; _filter lbSetData [(lbSize _filter)-1,localize "STR_CELL_SekMSGAll"]; }; if((call(zero_var_medicLevel) > 5) || (call(zero_var_adminLevel) > 0)) then { _filter lbAdd "Feuerwehr an Alle"; _filter lbSetData [(lbSize _filter)-1,"Feuerwehr an Alle"]; }; if((zero_var_playerSide isEqualTo east) || (call(zero_var_adminLevel) > 0)) then { _filter lbAdd "Ank체ndigung Gangeroberung"; _filter lbSetData [(lbSize _filter)-1,"Ank체ndigung Gangeroberung"]; }; if((call(zero_var_adminLevel) > 0)) then { _filter lbAdd localize "STR_CELL_AdminMSGAll"; _filter lbSetData [(lbSize _filter)-1,localize "STR_CELL_AdminMSGAll"]; _filter lbAdd "Adminnachricht an den ausgew채hlten Spieler"; _filter lbSetData [(lbSize _filter)-1,"Adminnachricht an den ausgew채hlten Spieler"]; }; lbSetCurSel [3005,0]; }; _type = ""; { if(_x != player && alive _x) then { _type = switch (side _x) do { case west: {localize "STR_Cell_Cop"}; case civilian: {localize "STR_Cell_Civ"}; case east: {localize "STR_Cell_Civ"}; case independent: {localize "STR_Cell_Med"}; }; _units lbAdd format["%1 (%2)",(_x getVariable["zero_var_realname",name _x]),if(_x getVariable["zero_var_streife",""] in ["ZIV1","ZIV2"]) then {localize "STR_Cell_Civ"}else{_type}]; _units lbSetData [(lbSize (_units))-1,str _x]; }; } forEach zero_var_localplayerlist; lbSort [_units,"ASC"];
