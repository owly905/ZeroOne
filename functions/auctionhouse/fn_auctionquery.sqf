_type = param [0, -1, [0]]; if(_type isEqualTo -1) exitWith {}; if(_type isEqualTo 0) exitWith { if((time - zero_var_auction_time) < 15) exitWith {"Du kannst das nur alle 15 Sekunden." call zero_fnc_msg}; zero_var_auction_time = time; zero_var_auctionswitch = true; [ [0,player], "zero_fnc_AuctionHandler", zero_var_HC1_owner ] call zero_fnc_sendPacket; _angle = 0; zero_var_auctions = nil; disableSerialization; _ctrl = (findDisplay 80200) displayCtrl 80221; _ctrl ctrlShow true; ctrlEnable[80207,false]; ctrlEnable [80204, false]; ctrlEnable [80205, false]; lbClear 80207; _bad = false; _time = time; _timetowait = time + 2; for '_i' from 0 to 1 step 0 do { if(isNull (findDisplay 80200)) exitWith {_bad = true}; if(!(isNil "zero_var_auctions") && {_timetowait < time}) exitWith {}; if(_angle isEqualTo 360) then {_angle = 0}; _angle = _angle + 1; _ctrl ctrlSetAngle[_angle, 0.5, 0.5]; sleep 0.005; }; zero_var_auctionswitch = false; if(_bad) exitWIth {}; _ctrl ctrlShow false; ctrlEnable[80207,true]; ctrlEnable [80204, true]; ctrlEnable [80205, true]; lbSetCurSel [80204, 0]; lbSetCurSel [80205, 0]; }; if(_type isEqualTo 1) exitWith { zero_var_auctions = _this select 1; }; if(_type isEqualTo 2) exitWith { if((time - zero_var_auction_time) < 15) exitWith {"Du kannst das nur alle 15 Sekunden." call zero_fnc_msg}; zero_var_auction_time = time; zero_var_auctionswitch = true; [ [1,player], "zero_fnc_AuctionHandler", zero_var_HC1_owner, false] call zero_fnc_sendPacket; _angle = 0; zero_var_garage = nil; disableSerialization; _ctrl = (findDisplay 80200) displayCtrl 80222; _ctrl ctrlShow true; ctrlEnable[80215,false]; ctrlEnable [80204, false]; lbClear 80215; _bad = false; _time = time; _timetowait = time + 2; for '_i' from 0 to 1 step 0 do { if(isNull (findDisplay 80200)) exitWith {_bad = true};
if(!(isNil "zero_var_garage") && {_timetowait < time}) exitWith {}; if(_angle isEqualTo 360) then {_angle = 0}; _angle = _angle + 1; _ctrl ctrlSetAngle[_angle, 0.5, 0.5]; sleep 0.005; }; zero_var_auctionswitch = false; if(_bad) exitWIth {}; _ctrl ctrlShow false; ctrlEnable[80215,true]; lbSetCurSel [80204,0]; ctrlEnable [80204, true]; }; if(_type isEqualTo 3) exitWith { zero_var_garage = _this select 1; }; if(_type isEqualTo 4) exitWith { _data = param [1, [], [[]]]; _price = _data select 6; [format["Du hast %1 im Auktionshaus für %2€ gekauft.",getText(configFile >> "CfgVehicles" >> (_data select 2) >> "displayName"),[_price] call zero_fnc_Numbertext], 1,"Auktionshaus", false, 2] call zero_fnc_msg; disableUserInput false; ctrlEnable [80204, true]; ctrlEnable [80205, true]; }; if(_type isEqualTo 5) exitWith { disableUserInput false; ctrlEnable [80204, true]; ctrlEnable [80205, true]; _bool = param [1, true, [false]]; if(_bool) then { [0, ([2, 0] call zero_fnc_Z0Check) + (_this select 1)] call zero_fnc_Z0Check; [1] call zero_fnc_updatePartial; }; "Da war wohl jemand schneller..." call zero_fnc_msg; }; if(_type isEqualTo 6) exitWith { disableUserInput false; [1] call zero_fnc_updatePartial; ctrlEnable [80204, true]; ctrlEnable [80205, true]; ["Du hast die Auktion erfolgreich gelöscht.", 1,"Auktionshaus", false, 2] call zero_fnc_msg; zero_var_garage = []; }; if(_type isEqualTo 7) exitWith { params [ "", ["_name", "", [""]], ["_val", 0, [0]], ["_veh", "", [""]] ]; if((_name isEqualTo "") OR {_val isEqualTo 0} OR {_veh isEqualTo ""}) exitWith {}; _val = _val*0.85; [0, ([2, 0] call zero_fnc_Z0Check) + _val] call zero_fnc_Z0Check; [format["%1 hat dein(e) %2 im Auktionshaus gekauft. Es wurden dir %3€ überwiesen.",_name, getText(configfile >> "CfgVehicles" >> _veh >> "displayname"), [_val] call zero_fnc_numbertext],2] call zero_fnc_msg; };
