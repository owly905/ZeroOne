if (!hasInterface) exitWith {}; private ["_source","_type","_targetControl","_sourceControl","_data","_newPrimaryItem","_oldPrimaryItem","_typeNumber","_primaryWeapon","_acc_p","_acc_o","_acc_m","_acc_b","_compatibleItems","_defaultPic"]; disableSerialization; _source = param[0,[],[[]]]; _type = param[1,"",[""]]; _targetControl = (_source param[0,controlNull,[controlNull]]); _sourceControl = (_source param[3,0,[0]]); _data = (_source param[4,[],[[]]]); _data = _data select 0; _newPrimaryItem = toLower(_data select 2); if(_newPrimaryItem isEqualTo "") exitWith {}; _oldPrimaryItem = toLower(_targetControl lbData 0); _typeNumber = switch (_type) do { case "silencer": {101}; case "optic": {201}; case "pointer": {301}; case "bipod": {302}; default {-1}; }; if(ctrlIDC _targetControl isEqualTo _sourceControl) exitWith {}; if((getNumber(configFile >> "CfgWeapons" >> _newPrimaryItem >> "ItemInfo" >> "type")) != _typeNumber || _sourceControl != 1600) exitWith {"Das passt hier nicht" call zero_fnc_msg;}; if(_sourceControl isEqualTo 1600) then { _primaryWeapon = toLower(((findDisplay 1000) displayCtrl 1601) lbData 0); _primaryWeapon = configName(inheritsFrom (configFile >> "CfgWeapons" >> _primaryWeapon)); if(isClass (configFile >> "CfgWeapons" >> _primaryWeapon >> "WeaponSlotsInfo")) then { _acc_p = getArray(configFile >> "CfgWeapons" >> _primaryWeapon >> "WeaponSlotsInfo" >> "PointerSlot" >> "compatibleItems"); _acc_o = getArray(configFile >> "CfgWeapons" >> _primaryWeapon >> "WeaponSlotsInfo" >> "CowsSlot" >> "compatibleItems"); _acc_m = getArray(configFile >> "CfgWeapons" >> _primaryWeapon >> "WeaponSlotsInfo" >> "MuzzleSlot" >> "compatibleItems"); _acc_b = getArray(configFile >> "CfgWeapons" >> _primaryWeapon >> "WeaponSlotsInfo" >> "UnderBarrelSlot" >> "compatibleItems");
_compatibleItems = []; {_compatibleItems set [_forEachIndex, toLower(_x)];} forEach (_acc_p + _acc_o + _acc_m + _acc_b); if(!(_newPrimaryItem in (_compatibleItems))) exitWith {"Das kannst du nicht an die Waffen anbringen" call zero_fnc_msg;}; lbClear _targetControl; _targetControl lbAdd format ["   %1",getText (configFile >> "CfgWeapons" >> _newPrimaryItem >> "displayName")]; _targetControl lbSetTooltip [lbSize(_targetControl) - 1, getText (configFile >> "CfgWeapons" >> _newPrimaryItem >> "displayName")]; _targetControl lbSetPicture [lbSize(_targetControl) - 1, getText (configFile >> "CfgWeapons" >> _newPrimaryItem >> "picture")]; _targetControl lbSetValue [lbSize(_targetControl) - 1, 1]; _targetControl lbSetData [lbSize(_targetControl) - 1, _newPrimaryItem]; [toLower(_newPrimaryItem),-1] call zero_fnc_addItemToLocker; if(!(_oldPrimaryItem isEqualTo "")) then { [toLower(_oldPrimaryItem),1] call zero_fnc_addItemToLocker; }; player addPrimaryWeaponItem _newPrimaryItem; }; }else{ _sourceControl = ((findDisplay 1000) displayCtrl _sourceControl); lbClear _sourceControl; _defaultPic = switch (getNumber(configFile >> "CfgWeapons" >> _newPrimaryItem >> "ItemInfo" >> "type")) do { case 101:{"\A3\Ui_f\data\GUI\Rsc\RscDisplayGear\ui_gear_muzzle_gs.paa"}; case 201:{"\A3\Ui_f\data\GUI\Rsc\RscDisplayGear\ui_gear_top_gs.paa"}; case 301:{"\A3\Ui_f\data\GUI\Rsc\RscDisplayGear\ui_gear_side_gs.paa"}; case 302:{"\A3\Ui_f\data\GUI\Rsc\RscDisplayGear\ui_gear_bipod_gs.paa"}; default{""}; }; _sourceControl lbAdd ""; _sourceControl lbSetPicture [lbSize(_sourceControl) - 1,_defaultPic]; [toLower(_newPrimaryItem),1] call zero_fnc_addItemToLocker; player removePrimaryWeaponItem _newPrimaryItem; }; [] call zero_fnc_updateWeaponTab; _targetControl lbSetCurSel -1;
