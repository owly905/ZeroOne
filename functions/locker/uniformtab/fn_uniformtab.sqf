if (!hasInterface) exitWith {}; disableSerialization; waitUntil {!isNull (findDisplay 1000)}; private _display = findDisplay 1000; if (isNull _display) exitWith {(str(_display)) call zero_fnc_msg;}; _display displayAddEventHandler ["KeyDown", "if((_this select 1) == 1) then {true};"]; if(!(_display getVariable["zero_var_fistCall",false])) then { _display setVariable["zero_var_fistCall",true]; [] spawn { waitUntil {isNull (findDisplay 1000)}; [[getPlayerUID player, zero_var_playerSide, zero_var_locker],"zero_fnc_updateLocker",zero_var_HC1_owner,false] call zero_fnc_sendPacket; [] call zero_fnc_updateRequest; zero_var_locker_inUse = serverTime; zero_var_allowedLockerPrimary = nil; }; }; [] spawn { disableSerialization; _display = findDisplay 1000; (_display displayCtrl 1600) ctrlShow false; (_display displayCtrl 1601) ctrlShow false; (_display displayCtrl 1602) ctrlShow false; (_display displayCtrl 1603) ctrlShow false; (_display displayCtrl 1604) ctrlShow false; (_display displayCtrl 1605) ctrlShow false; (_display displayCtrl 1606) ctrlShow false; (_display displayCtrl 1607) ctrlShow false; (_display displayCtrl 1608) ctrlShow false; (_display displayCtrl 1609) ctrlShow false; (_display displayCtrl 1610) ctrlShow false; (_display displayCtrl 1611) ctrlShow false; (_display displayCtrl 1612) ctrlShow false; (_display displayCtrl 1613) ctrlShow false; (_display displayCtrl 1614) ctrlShow false; (_display displayCtrl 1615) ctrlShow false; (_display displayCtrl 1616) ctrlShow false; (_display displayCtrl 1617) ctrlShow false; (_display displayCtrl 1618) ctrlShow false; (_display displayCtrl 1619) ctrlShow false; (_display displayCtrl 1620) ctrlShow false; (_display displayCtrl 1621) ctrlShow false; (_display displayCtrl 1700) ctrlShow false; (_display displayCtrl 1701) ctrlShow false; (_display displayCtrl 1801) ctrlShow true; (_display displayCtrl 1802) ctrlShow true; (_display displayCtrl 1804) ctrlShow false; (_display displayCtrl 1803) ctrlShow false; }; private _headgearList = (_display displayCtrl 1500); _headgearList ctrlShow true; private _headgearPlayer = _display displayCtrl 1501; _headgearPlayer ctrlShow true; _headgearPlayer ctrlSetTooltip "Kopfbedeckung"; private _gogglesList = _display displayCtrl 1502; _gogglesList ctrlShow true; private _gogglesPlayer = _display displayCtrl 1503; _gogglesPlayer ctrlShow true; _gogglesPlayer ctrlSetTooltip "Brillen"; private _uniformList = _display displayCtrl 1504; _uniformList ctrlShow true; private _uniformPlayer = _display displayCtrl 1505; _uniformPlayer ctrlShow true; _uniformPlayer ctrlSetTooltip "Uniform"; private _vestList = _display displayCtrl 1506; _vestList ctrlShow true; private _vestPlayer = _display displayCtrl 1507; _vestPlayer ctrlShow true; _vestPlayer ctrlSetTooltip "Weste"; private _backpackList = _display displayCtrl 1508; _backpackList ctrlShow true; private _backpackPlayer = _display displayCtrl 1509; _backpackPlayer ctrlShow true; _backpackPlayer ctrlSetTooltip "Rucksack"; private _binocularList = _display displayCtrl 1510; _binocularList ctrlShow true; private _binocularPlayer = _display displayCtrl 1511; _binocularPlayer ctrlShow true; _binocularPlayer ctrlSetTooltip "Fernglas"; lbClear _headgearList; lbClear _headgearPlayer; lbClear _gogglesList; lbClear _gogglesPlayer; lbClear _uniformList; lbClear _uniformPlayer; lbClear _vestList; lbClear _vestPlayer; lbClear _backpackList; lbClear _backpackPlayer; lbClear _binocularList; lbClear _binocularPlayer; private _loadOut = getUnitLoadout player; private _uniformInfo = _loadOut select 3; private _vestInfo = _loadOut select 4; private _backpackInfo = _loadOut select 5; private _headgear = _loadOut select 6; private _goggles = _loadOut select 7; private _binocular = _loadOut select 8; if (_headgear != "") then { _headgearPlayer lbAdd format ["   %1",getText (configFile >> "CfgWeapons" >> _headgear >> "displayName")]; _headgearPlayer lbSetTooltip [lbSize(_headgearPlayer) - 1, getText (configFile >> "CfgWeapons" >> _headgear >> "displayName")]; _headgearPlayer lbSetPicture [lbSize(_headgearPlayer) - 1, getText (configFile >> "CfgWeapons" >> _headgear >> "picture")]; _headgearPlayer lbSetValue [lbSize(_headgearPlayer) - 1, 1]; _headgearPlayer lbSetData [lbSize(_headgearPlayer) - 1, _headgear]; }else{ _headgearPlayer lbAdd ""; _headgearPlayer lbSetPicture [lbSize(_headgearPlayer) - 1, "\A3\Ui_f\data\GUI\Rsc\RscDisplayGear\ui_gear_helmet_gs.paa"]; }; if (_goggles != "") then { _gogglesPlayer lbAdd format ["   %1",getText (configFile >> "CfgGlasses" >> _goggles >> "displayName")]; _gogglesPlayer lbSetPicture [lbSize(_gogglesPlayer) - 1, getText (configFile >> "CfgGlasses" >> _goggles >> "picture")]; _gogglesPlayer lbSetTooltip [lbSize(_gogglesPlayer) - 1, getText (configFile >> "CfgGlasses" >> _goggles >> "displayName")]; _gogglesPlayer lbSetValue [lbSize(_gogglesPlayer) - 1, 1]; _gogglesPlayer lbSetData [lbSize(_gogglesPlayer) - 1, _goggles]; }else{ _gogglesPlayer lbAdd ""; _gogglesPlayer lbSetPicture [lbSize(_gogglesPlayer) - 1, "\A3\Ui_f\data\GUI\Rsc\RscDisplayGear\ui_gear_glasses_gs.paa"]; }; if ((!(_uniformInfo isEqualTo [])) && {(_uniformInfo select 0) != ""}) then { _uniformPlayer lbAdd format ["   %1",getText (configFile >> "CfgWeapons" >> (_uniformInfo select 0) >> "displayName")]; _uniformPlayer lbSetPicture [lbSize(_uniformPlayer) - 1, getText (configFile >> "CfgWeapons" >> (_uniformInfo select 0) >> "picture")]; _uniformPlayer lbSetTooltip [lbSize(_uniformPlayer) - 1, getText (configFile >> "CfgWeapons" >> (_uniformInfo select 0) >> "displayName")]; _uniformPlayer lbSetValue [lbSize(_uniformPlayer) - 1, 1]; _uniformPlayer lbSetData [lbSize(_uniformPlayer) - 1, (_uniformInfo select 0)]; }else{ _uniformPlayer lbAdd ""; _uniformPlayer lbSetPicture [lbSize(_uniformPlayer) - 1, "\A3\Ui_f\data\GUI\Rsc\RscDisplayGear\ui_gear_uniform_gs.paa"]; }; if ((!(_vestInfo isEqualTo [])) && {(_vestInfo select 0) != ""}) then { _vestPlayer lbAdd format ["   %1",getText (configFile >> "CfgWeapons" >> (_vestInfo select 0) >> "displayName")]; _vestPlayer lbSetPicture [lbSize(_vestPlayer) - 1, getText (configFile >> "CfgWeapons" >> (_vestInfo select 0) >> "picture")]; _vestPlayer lbSetTooltip [lbSize(_vestPlayer) - 1, getText (configFile >> "CfgWeapons" >> (_vestInfo select 0) >> "displayName")];
_vestPlayer lbSetValue [lbSize(_vestPlayer) - 1, 1]; _vestPlayer lbSetData [lbSize(_vestPlayer) - 1, (_vestInfo select 0)]; }else{ _vestPlayer lbAdd ""; _vestPlayer lbSetPicture [lbSize(_vestPlayer) - 1, "\A3\Ui_f\data\GUI\Rsc\RscDisplayGear\ui_gear_vest_gs.paa"]; }; if ((!(_backpackInfo isEqualTo [])) && {(_backpackInfo select 0) != ""}) then { _backpackPlayer lbAdd format ["   %1",getText (configFile >> "CfgVehicles" >> (_backpackInfo select 0) >> "displayName")]; _backpackPlayer lbSetPicture [lbSize(_backpackPlayer) - 1, getText (configFile >> "CfgVehicles" >> (_backpackInfo select 0) >> "picture")]; _backpackPlayer lbSetTooltip [lbSize(_backpackPlayer) - 1, getText (configFile >> "CfgVehicles" >> (_backpackInfo select 0) >> "displayName")]; _backpackPlayer lbSetValue [lbSize(_backpackPlayer) - 1, 1]; _backpackPlayer lbSetData [lbSize(_backpackPlayer) - 1, (_backpackInfo select 0)]; }else{ _backpackPlayer lbAdd ""; _backpackPlayer lbSetPicture [lbSize(_backpackPlayer) - 1, "\A3\Ui_f\data\GUI\Rsc\RscDisplayGear\ui_gear_backpack_gs.paa"]; }; if ((!(_binocular isEqualTo [])) && {(_binocular select 0) != ""}) then { _binocularPlayer lbAdd format ["   %1",getText (configFile >> "CfgWeapons" >> (_binocular select 0) >> "displayName")]; _binocularPlayer lbSetPicture [lbSize(_binocularPlayer) - 1, getText (configFile >> "CfgWeapons" >> (_binocular select 0) >> "picture")]; _binocularPlayer lbSetTooltip [lbSize(_binocularPlayer) - 1, getText (configFile >> "CfgWeapons" >> (_binocular select 0) >> "displayName")]; _binocularPlayer lbSetValue [lbSize(_binocularPlayer) - 1, 1]; _binocularPlayer lbSetData [lbSize(_binocularPlayer) - 1, (_binocular select 0)]; }else{ _binocularPlayer lbAdd ""; _binocularPlayer lbSetPicture [lbSize(_binocularPlayer) - 1, "\A3\Ui_f\data\GUI\Rsc\RscDisplayGear\ui_gear_binocular_gs.paa"]; }; { { private _entity = toLower(_x select 0); if (_entity != "") then { if (isClass (configFile >> "CfgWeapons" >> _entity)) then { if (getText(configFile >> "CfgWeapons" >> _entity >> "ItemInfo" >> "containerClass") != "") then { if (getNumber(configFile >> "CfgWeapons" >> _entity >> "ItemInfo" >> "type") == 801) then { _uniformList lbAdd format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgWeapons" >> _entity >> "displayName")]; _uniformList lbSetTooltip [lbSize(_uniformList) - 1, format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgWeapons" >> _entity >> "displayName")]]; _uniformList lbSetPicture [lbSize(_uniformList) - 1, getText (configFile >> "CfgWeapons" >> _entity >> "picture")]; _uniformList lbSetValue [lbSize(_uniformList) - 1, (_x select 1)]; _uniformList lbSetData [lbSize(_uniformList) - 1, _entity]; } else { _vestList lbAdd format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgWeapons" >> _entity >> "displayName")]; _vestList lbSetTooltip [lbSize(_vestList) - 1, format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgWeapons" >> _entity >> "displayName")]]; _vestList lbSetPicture [lbSize(_vestList) - 1, getText (configFile >> "CfgWeapons" >> _entity >> "picture")]; _vestList lbSetValue [lbSize(_vestList) - 1, (_x select 1)]; _vestList lbSetData [lbSize(_vestList) - 1, _entity]; }; } else { if(getNumber(configFile >> "CfgWeapons" >> _entity >> "ItemInfo" >> "type") == 605) then { _headgearList lbAdd format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgWeapons" >> _entity >> "displayName")]; _headgearList lbSetTooltip [lbSize(_headgearList) - 1, format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgWeapons" >> _entity >> "displayName")]]; _headgearList lbSetPicture [lbSize(_headgearList) - 1, getText (configFile >> "CfgWeapons" >> _entity >> "picture")]; _headgearList lbSetValue [lbSize(_headgearList) - 1, (_x select 1)]; _headgearList lbSetData [lbSize(_headgearList) - 1, _entity]; }else{ if(_entity find "binocular" != -1 || _entity find "rangefinder" != -1) then { _binocularList lbAdd format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgWeapons" >> _entity >> "displayName")]; _binocularList lbSetTooltip [lbSize(_binocularList) - 1, format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgWeapons" >> _entity >> "displayName")]]; _binocularList lbSetPicture [lbSize(_binocularList) - 1, getText (configFile >> "CfgWeapons" >> _entity >> "picture")]; _binocularList lbSetValue [lbSize(_binocularList) - 1, (_x select 1)]; _binocularList lbSetData [lbSize(_binocularList) - 1, _entity]; }; }; }; } else { if (isClass (configFile >> "CfgVehicles" >> _entity)) then { _backpackList lbAdd format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgVehicles" >> _entity >> "displayName")]; _backpackList lbSetTooltip [lbSize(_backpackList) - 1, format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgVehicles" >> _entity >> "displayName")]]; _backpackList lbSetPicture [lbSize(_backpackList) - 1, getText (configFile >> "CfgVehicles" >> _entity >> "picture")]; _backpackList lbSetValue [lbSize(_backpackList) - 1, (_x select 1)]; _backpackList lbSetData [lbSize(_backpackList) - 1, _entity]; } else { if (isClass (configFile >> "CfgGlasses" >> _entity)) then { _gogglesList lbAdd format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgGlasses" >> _entity >> "displayName")]; _gogglesList lbSetTooltip [lbSize(_gogglesList) - 1, format ["%2 (%1)", (_x select 1), getText (configFile >> "CfgGlasses" >> _entity >> "displayName")]]; _gogglesList lbSetPicture [lbSize(_gogglesList) - 1, getText (configFile >> "CfgGlasses" >> _entity >> "picture")]; _gogglesList lbSetValue [lbSize(_gogglesList) - 1, (_x select 1)]; _gogglesList lbSetData [lbSize(_gogglesList) - 1, _entity]; }; }; }; }; } forEach _x; } forEach zero_var_locker; if((lbSize(_headgearList) - 1) isEqualTo -1) then {_headgearList lbAdd "Keine Kopfbedeckungen verfügbar";}; if((lbSize(_gogglesList) - 1) isEqualTo -1) then {_gogglesList lbAdd "Keine Brillen verfügbar";}; if((lbSize(_binocularList) - 1) isEqualTo -1) then {_binocularList lbAdd "Keine Ferngläser verfügbar";}; if((lbSize(_uniformList) - 1) isEqualTo -1) then {_uniformList lbAdd "Keine Uniformen verfügbar";}; if((lbSize(_vestList) - 1) isEqualTo -1) then {_vestList lbAdd "Keine Westen verfügbar";}; if((lbSize(_backpackList) - 1) isEqualTo -1) then {_backpackList lbAdd "Keine Rucksäcke verfügbar";}; lbSort _headgearList; lbSort _gogglesList; lbSort _binocularList; lbSort _uniformList; lbSort _vestList; lbSort _backpackList; _headgearList lbSetCurSel -1; _gogglesList lbSetCurSel -1; _binocularList lbSetCurSel -1; _uniformList lbSetCurSel -1; _vestList lbSetCurSel -1; _backpackList lbSetCurSel -1;
