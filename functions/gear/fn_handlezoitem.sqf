if (!hasInterface) exitWith {}; private["_itm","_details","_bool","_ispack","_items","_isgun","_ongun","_override","_toUniform","_toVest","_wepItems","_action","_slotTaken","_type","_tWeapons","_tWeaponCount","_tmpfunction","_numVestWeps"]; _itm = param[0,"",[""]]; _bool = param[1,false,[false]]; _ispack = param[2,false,[false]]; _ongun = param[3,false,[false]]; _override = param[4,false,[false]]; _toUniform = param[5,false,[false]]; _toVest = param[6,false,[false]]; if(_itm == "") exitWith {}; _isgun = false; _details = [_itm] call zero_fnc_fetchCfgDetails; if(_details isEqualTo []) exitWith {}; if(_bool) then { switch((_details select 6)) do { case "CfgGlasses": { if(_toUniform) exitWith {player addItemToUniform _itm;}; if(_toVest) exitWith {player addItemToVest _itm;}; if(_ispack) then { player addItemToBackpack _itm; } else { if(_override) then { player addItem _itm; } else { if(goggles player != "") then { removeGoggles player; }; player addGoggles _itm; }; }; }; case "CfgVehicles": { if (_itm isKindOf "Man") then { if(player isKindOf "Civilian") then { if(uniform player == (_details select 16)) then { } else { if(uniform player != "") then { _items = uniformItems player; removeUniform player; }; player forceAddUniform (_details select 16); if(!isNil "_items") then { {player addItemToUniform _x} forEach _items; }; }; } else { if(uniform player != "") then { _items = uniformItems player; removeUniform player; }; if(!(player isUniformAllowed (_details select 16))) then { player forceAddUniform (_details select 16); } else { player addUniform (_details select 16); }; if(!isNil "_items") then { {player addItemToUniform _x} forEach _items; }; }; } else { if(backpack player != "") then { _items = (backpackItems player); removeBackpack player; }; player addBackpack _itm; clearAllItemsFromBackpack player; if(!isNil {_items}) then { {[_x,true,true,false,true] spawn zero_fnc_handleZOItem; } forEach _items; }; }; }; case "CfgMagazines": { if(_toUniform) exitWith {player addItemToUniform _itm;}; if(_toVest) exitWith {player addItemToVest _itm;}; if(_ispack) exitWith {player addItemToBackpack _itm;}; player addMagazine _itm; }; case "CfgWeapons": { if(_toUniform) exitWith {player addItemToUniform _itm;}; if(_toVest) exitWith {player addItemToVest _itm;}; if(_ispack) exitWith {player addItemToBackpack _itm;}; if((_details select 4) in [1,2,4,5,4096]) then { if((_details select 4) == 4096) then { if((_details select 5) == -1) then { _isgun = true; }; } else { _isgun = true; }; }; if(_isgun) then { if(!_ispack && _override) exitWith {}; if(_itm == "MineDetector") then { player addItem _itm; } else { player addWeapon _itm; }; } else { switch(_details select 5) do { case 0: { if(_ispack) then { player addItemToBackpack _itm; } else { if(_override) then { player addItem _itm; } else { if(_itm in (assignedItems player)) then { player addItem _itm; } else { player addItem _itm; player assignItem _itm; }; }; }; }; case 605: { if(_ispack) then { player addItemToBackpack _itm; } else { if(_override) then { player addItem _itm; } else { if(headGear player == _itm) then { if (player canadd _itm) then { player addItem _itm; }; } else { if(headGear player != "") then { removeHeadgear player; }; player addHeadGear _itm; }; }; }; }; case 801: { if(_ispack) then { player addItemToBackpack _itm; } else { if(_override) then { player addItem _itm; } else { if(player isKindOf "Civilian") then { if(uniform player == _itm) then { } else { if(uniform player != "") then { _items = uniformItems player; removeUniform player; }; player forceAddUniform _itm; if(!isNil "_items") then { {player addItemToUniform _x} forEach _items; }; }; } else { if(uniform player != "") then { _items = uniformItems player; removeUniform player; }; if(!(player isUniformAllowed _itm)) then { player forceAddUniform _itm; } else { player addUniform _itm; }; if(!isNil "_items") then { {player addItemToUniform _x} forEach _items; }; }; }; }; }; case 701: { if(_ispack) then { player addItemToBackpack _itm; } else { if(_override) then { player addItem _itm; } else { if(vest player isEqualTo _itm) then { } else { if(vest player != "") then { _items = vestItems player; removeVest player; }; player addVest _itm; if(!isNil {_items}) then { {[_x,true,false,false,true] spawn zero_fnc_handleZOItem;} forEach _items; }; }; }; }; }; case 201: { if(_ispack) then { player addItemToBackpack _itm; } else { _type = [_itm,201] call zero_fnc_accType; if(_ongun) then { switch (_type) do { case 1: { player addPrimaryWeaponItem _itm; }; case 2: { player addSecondaryWeaponItem _itm; }; case 3: { player addHandgunItem _itm; }; }; } else { if(_override) then { player addItem _itm; } else { _wepItems = switch(_type) do {case 1:{primaryWeaponItems player}; case 2:{secondaryWeaponItems player}; case 3:{handgunItems player}; default {["","","",""]};}; _slotTaken = false; if(_wepItems select 2 != "") then {_slotTaken = true;}; if(_slotTaken) then { player addItem _itm; } else { switch(_type) do { case 1: {player addPrimaryWeaponItem _itm;}; case 2: {player addSecondaryWeaponItem _itm;}; case 3: {player addHandgunItem _itm;}; default {player addItem _itm;}; }; }; }; }; }; }; case 301: { if(_ispack) then { player addItemToBackpack _itm; } else { _type = [_itm,301] call zero_fnc_accType; if(_ongun) then { switch (_type) do { case 1: { player addPrimaryWeaponItem _itm; }; case 2: { player addSecondaryWeaponItem _itm; }; case 3: { player addHandgunItem _itm;
}; }; } else { if(_override) then { player addItem _itm; } else { _wepItems = switch(_type) do {case 1:{primaryWeaponItems player}; case 2:{secondaryWeaponItems player}; case 3:{handgunItems player}; default {["","","",""]};}; _slotTaken = false; if(_wepItems select 1 != "") then {_slotTaken = true;}; if(_slotTaken) then { player addItem _itm; } else { switch(_type) do { case 1: {player addPrimaryWeaponItem _itm;}; case 2: {player addSecondaryWeaponItem _itm;}; case 3: {player addHandgunItem _itm;}; default {player addItem _itm;}; }; }; }; }; }; }; case 302: { if(_ispack) then { player addItemToBackpack _itm; } else { _type = [_itm,302] call zero_fnc_accType; if(_ongun) then { switch (_type) do { case 1: { player addPrimaryWeaponItem _itm; }; case 2: { player addSecondaryWeaponItem _itm; }; case 3: { player addHandgunItem _itm; }; }; } else { if(_override) then { player addItem _itm; } else { _wepItems = switch(_type) do {case 1:{primaryWeaponItems player}; case 2:{secondaryWeaponItems player}; case 3:{handgunItems player}; default {["","","",""]};}; _slotTaken = false; if(_wepItems select 3 != "") then {_slotTaken = true;}; if(_slotTaken) then { player addItem _itm; } else { switch(_type) do { case 1: {player addPrimaryWeaponItem _itm;}; case 2: {player addSecondaryWeaponItem _itm;}; case 3: {player addHandgunItem _itm;}; default {player addItem _itm;}; }; }; }; }; }; }; case 101: { if(_ispack) then { player addItemToBackpack _itm; } else { _type = [_itm,101] call zero_fnc_accType; if(_ongun) then { switch (_type) do { case 1: { player addPrimaryWeaponItem _itm; }; case 2: { player addSecondaryWeaponItem _itm; }; case 3: { player addHandgunItem _itm; }; }; } else { if(_override) then { player addItem _itm; } else { _wepItems = switch(_type) do {case 1:{primaryWeaponItems player}; case 2:{secondaryWeaponItems player}; case 3:{handgunItems player}; default {["","","",""]};}; _slotTaken = false; if(_wepItems select 0 != "") then {_slotTaken = true;}; if(_slotTaken) then { player addItem _itm; } else { switch(_type) do { case 1: {player addPrimaryWeaponItem _itm;}; case 2: {player addSecondaryWeaponItem _itm;}; case 3: {player addHandgunItem _itm;}; default {player addItem _itm;}; }; }; }; }; }; }; case 621: { if(_ispack) then { player addItemToBackpack _itm; } else { if(_override) then { player addItem _itm; } else { player addItem _itm; player assignItem _itm; }; }; }; case 616: { if(_ispack) then { player addItemToBackpack _itm; } else { if(_override) then { player addItem _itm; } else { player addItem _itm; player assignItem _itm; }; }; }; default { if(_ispack) then { player addItemToBackpack _itm; } else { player addItem _itm; }; }; }; }; }; }; } else { switch((_details select 6)) do { case "CfgVehicles": { removeBackpack player; }; case "CfgMagazines": { player removeMagazine _itm; }; case "CfgGlasses": { if(_itm == goggles player) then { removeGoggles player; } else { player removeItem _itm; }; }; case "CfgWeapons": { if((_details select 4) in [1,2,4,5,4096]) then { if((_details select 4) == 4096) then { if((_details select 5) == -1) then { _isgun = true; }; } else { _isgun = true; }; }; if(_isgun) then { switch(true) do { case (primaryWeapon player == _itm) : {_ispack = false;}; case (secondaryWeapon player == _itm) : {_ispack = false;}; case (handGunweapon player == _itm) : {_ispack = false;}; case (_itm in assignedItems player) : {_ispack = false;}; default {_ispack = true;}; }; if(_itm == "MineDetector") then { player removeItem _itm; } else { _tmpfunction = { switch(true) do { case (_this in (uniformItems player)): { _tWeapons = (getWeaponCargo (uniformContainer player)) select 0; _tWeaponCount = (getWeaponCargo (uniformContainer player)) select 1; clearWeaponCargo (uniformContainer player); { _numVestWeps = _tWeaponCount select _forEachIndex; if(_x == _this) then { _numVestWeps = _numVestWeps - 1; }; (uniformContainer player) addWeaponCargo [ _x,_numVestWeps]; }forEach _tWeapons; }; case (_this in (vestItems player)): { _tWeapons = (getWeaponCargo (vestContainer player)) select 0; _tWeaponCount = (getWeaponCargo (vestContainer player)) select 1; clearWeaponCargo (vestContainer player); { _numVestWeps = _tWeaponCount select _forEachIndex; if(_x == _this) then { _numVestWeps = _numVestWeps - 1; }; (vestContainer player) addWeaponCargo [ _x,_numVestWeps]; }forEach _tWeapons; }; case (_this in (backpackItems player)): { _tWeapons = (getWeaponCargo (backpackContainer player)) select 0; _tWeaponCount = (getWeaponCargo (backpackContainer player)) select 1; clearWeaponCargo (backpackContainer player); { _numVestWeps = _tWeaponCount select _forEachIndex; if(_x == _this) then { _numVestWeps = _numVestWeps - 1; }; (backpackContainer player) addWeaponCargo [ _x,_numVestWeps]; }forEach _tWeapons; }; }; }; if(_ispack) then { _itm call _tmpfunction; } else { switch(true) do { case (_itm in (uniformItems player)): {_itm call _tmpfunction;}; case (_itm in (vestItems player)) : {_itm call _tmpfunction;}; case (_itm in (backpackItems player)) : {_itm call _tmpfunction;}; default {player removeWeapon _itm;}; }; }; }; } else { switch((_details select 5)) do { case 0: {player unassignItem _itm; player removeItem _itm;}; case 605: {if(headGear player == _itm) then {removeHeadgear player} else {player removeItem _itm};}; case 801: {if(uniform player == _itm) then {removeUniform player} else {player removeItem _itm};}; case 701: {if(vest player == _itm) then {removeVest player} else {player removeItem _itm};}; case 621: {player unassignItem _itm; player removeItem _itm;}; case 616: {player unassignItem _itm; player removeItem _itm;}; default { switch (true) do { case (_itm in (primaryWeaponItems player)) : {player removePrimaryWeaponItem _itm;}; case (_itm in (handgunItems player)) : {player removeHandgunItem _itm;}; default {player removeItem _itm;}; }; }; }; }; }; }; };
