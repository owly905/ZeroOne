if (!hasInterface) exitWith {}; private["_veh","_upp","_ui","_progress","_pgText","_cP","_displayName","_exit","_val","_chance","_cP2"]; _veh = cursorObject; zero_var_interrupted = false; if(isNull _veh) exitWith {}; _exit = { if(!(call(zero_var_medicLevel) > 0)) then { player addItem "ToolKit"; }; }; if(((_veh isKindOf "Car") || (_veh isKindOf "Ship") || (_veh isKindOf "Air")) && ("ToolKit" in (items player))) then { _val = (["repair"] call zero_fnc_getSkillValueCharacter) select 0; player removeItem "ToolKit"; if(call(zero_var_medicLevel) > 0) then {player addItem "ToolKit";}; zero_var_action_inUse = true; _displayName = getText(configFile >> "CfgVehicles" >> (typeOf _veh) >> "displayName"); _upp = format["Repariere %1",_displayName]; disableSerialization; 5 cutRsc ["zero_var_progress","PLAIN"]; _ui = uiNamespace getVariable "zero_var_progress"; _progress = _ui displayCtrl 38201; _pgText = _ui displayCtrl 38202; _pgText ctrlSetText format["%2 (1%1)...","%",_upp]; _progress progressSetPosition 0.01; _cP = 0; _cP2 = 0.01; if(playerSide isEqualTo independent) then { _cP2 = 0.05; } else { if(playerSide isEqualTo west) then { _cP2 = 0.02; }; }; for "_i" from 0 to 100 step 1 do { if(animationState player != "Acts_carFixingWheel" ) then { player action ["SwitchWeapon", player, player, 100]; player playMove "Acts_carFixingWheel"; player playActionNow "stop"; player playMove "Acts_carFixingWheel"; player playActionNow "stop"; player playMove "Acts_carFixingWheel"; }; uiSleep _val; _cP = _cP + _cP2; _progress progressSetPosition _cP;
_pgText ctrlSetText format["%3 (%1%2)...",round(_cP * 100),"%",_upp]; if(_cP >= 1) exitWith {}; if(zero_var_killed) exitWith {zero_var_interrupted = true;}; if(zero_var_istazed) exitWith {zero_var_interrupted = true;}; _vehicleCheck = !(isNull objectParent player); if(zero_var_interrupted || _vehicleCheck) exitWith {zero_var_interrupted = true;}; if(player getVariable["zero_var_restrained",false]) exitWith {zero_var_interrupted = true;}; }; 5 cutText ["","PLAIN"]; zero_var_action_inUse = false; player switchMove ""; player playActionNow "stop"; if(zero_var_interrupted || zero_var_istazed) exitWith { zero_var_interrupted = false; titleText[localize "STR_NOTF_ActionCancel","PLAIN"]; call _exit; }; if(player != vehicle player) exitWith { titleText[localize "STR_NOTF_VehicleGetOut","PLAIN"]; call _exit; }; [[player, "zero_var_fnc_setDamage", [_veh, 0]], "zero_fnc_remoteExecuteCommand", zero_var_HC1_owner] call zero_fnc_sendPacket; titleText[localize "STR_NOTF_VehicleRepaired","PLAIN"]; ["repair"] call zero_fnc_improveSkillCharacter; if(playerSide isEqualTo independent) then { [0, ([2, 0] call zero_fnc_Z0Check) + 2500] call zero_fnc_Z0Check; if(call(zero_var_medicLevel) > 4) exitWith {}; _chance = (["repair"] call zero_fnc_getSkillValueCharacter) select 1; if(random(100) > _chance) then { if(!isNil "zero_var_repair_count") exitWith { zero_var_repair_count = nil; }; [[player, "zero_var_fnc_setDamage", [_veh, 0.3]], "zero_fnc_remoteExecuteCommand", zero_var_HC1_owner] call zero_fnc_sendPacket; "Ohje, da ist etwas am Auto kaputt gegangen..." call zero_fnc_msg; zero_var_repair_count = 1; }; }; }else{ "Du hast kein ToolKit dabei!" call zero_fnc_msg; };
