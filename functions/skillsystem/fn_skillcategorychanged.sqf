if (!hasInterface) exitWith {}; private["_dialog","_categoryList","_skillList","_description","_sel","_skillNames","_skillValues","_exit","_name","_skill","_index","_values","_text"]; disableSerialization; _dialog = findDisplay 1000; _categoryList = _dialog displayCtrl 1002; _skillList = _dialog displayCtrl 1003; _description = _dialog displayCtrl 1004; if(lbCurSel _categoryList isEqualTo -1) exitWith {"Du hast nichts ausgew√§hlt" call zero_fnc_msg;}; _sel = _categoryList lbData (lbCurSel _categoryList); _sel = call compile format ["%1", _sel]; lbClear _skillList; _skillNames = []; _skillValues = []; _exit = false; _name = ""; { _skill = _x select 0; if(_skill == "search" && {playerSide != west}) then {_exit = true;}; if(_skill == "revive") then {_exit = true;}; if(_skill == "boltcutter" && {playerSide != civilian && playerSide != opfor}) then {_exit = true;
}; if(_skill == "impound" && {playerSide != west && playerSide != independent}) then {_exit = true;}; if(!_exit) then { _name = [_skill] call zero_fnc_varToStr; _skillNames pushBack _name; _skillValues pushBack [_name, _skill]; }; _exit = false; } forEach (zero_var_skills select _sel); { _index = [_x,_skillValues] call zero_fnc_findIndex; if(_index != -1) then { _values = _skillValues select _index; _skillList lbAdd format["%1", _values select 0]; _skillList lbSetData [(lbSize _skillList)-1,_values select 1]; }; } forEach _skillNames; lbSort [_skillList,"ASC"]; _skillList lbSetCurSel 0; _text = switch (_sel) do { case 0: {(localize "STR_Skill_Farming_Description")}; case 1: {(localize "STR_Skill_Processing_Description")}; case 2: {(localize "STR_Skill_Character_Description")}; default {""}; }; _description ctrlSetStructuredText parseText _text;
