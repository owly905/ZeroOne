if (!hasInterface) exitWith {}; private["_skill","_type","_level","_var","_probability","_result","_predecessor","_current","_total","_random"]; _skill = param[0,"",[""]]; if (_skill isEqualTo "") exitWith {}; _type = ""; _level = 0; switch (true) do { case (_skill in ["apple","peach","bananen"]): { _type = "zero_var_fruit_skill_value"; _level = (["fruit"] call zero_fnc_getSkillLevel) select 1; }; case (_skill in ["heroinu","cocaine","cannabis"]): { _type = "zero_var_drugs_skill_value"; _level = (["drugs"] call zero_fnc_getSkillLevel) select 1; }; case (_skill in ["grapes","baumwolle"]): { _type = "zero_var_lightweight_skill_value"; _level = (["grape"] call zero_fnc_getSkillLevel) select 1; }; case (_skill in ["dp","brief"]): { if(_skill == "dp") then { _type = "zero_var_dp_skill_value"; }else{ _type = "zero_var_lightweight_skill_value"; }; _level = (["post"] call zero_fnc_getSkillLevel) select 1; }; case (_skill in ["salt","sand"]): { _type = "zero_var_lightweight_skill_value"; _level = (["sand"] call zero_fnc_getSkillLevel) select 1; }; case (_skill in ["copperore","ironore"]): { _type = "zero_var_heavyweight_skill_value";
_level = (["ore"] call zero_fnc_getSkillLevel) select 1; }; case (_skill in ["oilu","gas"]): { _type = "zero_var_heavyweight_skill_value"; _level = (["fossil"] call zero_fnc_getSkillLevel) select 1; }; case (_skill in ["diamond","rock"]): { _type = "zero_var_heavyweight_skill_value"; _level = (["rock"] call zero_fnc_getSkillLevel) select 1; }; default {_type = "";}; }; if(_type isEqualTo "") exitWith {1}; _var = call compile (format["%1",_type]); _probability = _var select _level; if(_type == "zero_var_dp_skill_value") exitWith { _result = [_probability, zero_var_lockpick_skill_chance select _level]; _result; }; if(_level isEqualTo 100) exitWith { _result = count _probability; _result; }; _result = 0; _predecessor = 0; _current = 0; _total = 0; _random = round(random(100)); { if(_x != 0) then { if(_forEachIndex > 0) then { _predecessor = _predecessor + (_probability select (_forEachIndex - 1)); if(_predecessor < _random && _random < (_x + _predecessor)) exitWith {_result = _forEachIndex + 1;}; }else{ if(_random <= _x) exitWith {_result = _forEachIndex + 1;}; }; _total = _total + _x; }; if(_total >= 100) exitWith {}; } forEach _probability; _result;
