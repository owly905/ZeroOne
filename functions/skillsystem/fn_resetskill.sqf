if (!hasInterface) exitWith {}; private["_points","_newLevel","_level","_percentage","_needed"]; if(playerSide isEqualTo west || playerSide isEqualTo independent) exitWith {}; { _points = _x select 1; _level = _x select 2; if(_points != 0) then { if(_level == 0) exitWith {_x set[1, round(0.95 * _points)]}; _newLevel = _level - 1; _percentage = 1; switch (true) do { case (_level == 1): { _needed = 20; _percentage = 0.95; }; case (2 <= _level && _level < 5): { _needed = (20 * _level) * _newLevel; _percentage = 0.95; }; case (5 <= _level && _level < 10): { _needed = (25 * _level) * _newLevel; _percentage = 0.95; }; case (10 <= _level && _level < 20): { _needed = (30 * _level) * _newLevel; _percentage = 0.95; }; case (20 <= _level && _level < 30): { _needed = (35 * _level) * _newLevel; _percentage = 0.96; }; case (30 <= _level && _level < 40): { _needed = (40 * _level) * _newLevel; _percentage = 0.97; }; case (40 <= _level && _level < 50): { _needed = (45 * _level) * _newLevel;
_percentage = 0.98; }; default { _needed = (50 * _level) * _newLevel; _percentage = 0.99; }; }; _points = round(_percentage * _points); if(_needed > _points) then { _points = _needed; }; _x set[1, _points]; }; } forEach (zero_var_skills select 0); { _points = _x select 1; _level = _x select 2; if (_points != 0) then { if(_level isEqualTo 0) exitWith {_x set[1, round(0.95 * _points)]}; _needed = 15; if(_level > 1) then { _needed = (15 * _level) * (_level - 1); }; _percentage = 1; switch (true) do { case (1 <= _level && _level < 20): { _percentage = 0.95; }; case (20 <= _level && _level < 30): { _percentage = 0.96; }; case (30 <= _level && _level < 40): { _percentage = 0.97; }; case (40 <= _level && _level < 50): { _percentage = 0.98; }; default { _percentage = 0.99; }; }; _points = round(_percentage * _points); if(_needed > _points) then { _points = _needed; }; _x set[1,_points]; }; } forEach (zero_var_skills select 1);
