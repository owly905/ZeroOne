if (!hasInterface) exitWith {}; private["_skill","_type","_value","_level"]; _skill = param[0,"",[""]]; if (_skill isEqualTo "") exitWith {}; _type = ""; _value = 0; _level = ([_skill] call zero_fnc_getSkillLevel) select 1; switch (_skill) do { case "impound": {if(playerSide isEqualTo independent) then {_level = 100;}; _value = zero_var_impound_skill_time select _level;}; case "repair": {_value = [zero_var_character_skill_time select _level, zero_var_repair_skill_chance select _level];}; case "boltcutter": {_value = zero_var_boltcutter_skill_value select _level;}; case "lockpick": {_value = [zero_var_character_skill_time select _level, zero_var_lockpick_skill_chance select _level];
}; case "selfhealing": {_value = zero_var_selfheal_skill_value select _level;}; case "revive": {_value = [zero_var_impound_skill_time select _level, zero_var_repair_skill_chance select _level];}; case "search": { if(!isNil {player getVariable "zero_var_rank"}) then { if(player getVariable["zero_var_rank",0] <= 4) then { _value = (player getVariable["zero_var_rank",0]) * 20; _value = _value + (_level * 2.5); }else{ _value = 100; }; if(_value > 100) then {_value = 100;}; }; }; case "stamina": {_value = zero_var_stamina_skill_value select _level;}; }; _value;
