if (!hasInterface) exitWith {}; private["_display","_text","_units","_type","_countUnits","_gang"]; if(!zero_var_use_atm) exitWith {(localize "STR_Shop_ATMRobbed") call zero_fnc_msg;}; if(!(createDialog "zero_var_atm_management")) exitWith {}; disableSerialization; _display = findDisplay 2700; _text = _display displayCtrl 2701; _units = _display displayCtrl 2703; lbClear _units; _text ctrlSetStructuredText parseText format["<t size='1.8px'>Konto:</t> <t size='1.8px'>€%1</t><br/> <t size='1.8px'>Bar:</t>  <t size='1.8'>€%2</t>", [([2, 0] call zero_fnc_Z0Check)] call zero_fnc_numberText,[([3, 0] call zero_fnc_Z0Check)] call zero_fnc_numberText]; _countUnits = []; if (playerSide isEqualTo west && (call zero_var_copLevel) < 7 && call zero_var_sekLevel < 3) then { { if((side _x) isEqualTo west && _x != player && alive _x) then {_countUnits pushBack _x};
} forEach playableUnits; } else { if (playerSide isEqualTo west && ((call zero_var_copLevel) >= 7 || call zero_var_sekLevel >= 3)) then { { if(_x != player && alive _x) then {_countUnits pushBack _x}; } forEach playableUnits; } else { { if((side _x) != west && _x != player && alive _x) then {_countUnits pushBack _x}; } forEach playableUnits; }; }; { if(alive _x && _x != player) then { _type = switch ((side _x)) do { case west: {"Cop"}; case independent: {"EMS"}; default {"Civ"}; }; _units lbAdd format["%1 (%2)",_x getVariable["zero_var_realname",name _x],_type]; _units lbSetData [(lbSize _units)-1,str(_x)]; }; } forEach _countUnits; lbSort [_units,"ASC"]; lbSetCurSel [2703,0]; _gang = (group player) getVariable ["zero_var_gang",[]]; if(_gang isEqualTo []) then {((findDisplay 2700) displayCtrl 2705) ctrlEnable false;};
