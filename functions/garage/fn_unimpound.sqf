if (!hasInterface) exitWith {}; private ["_vehicle","_vid","_pid","_price","_tmpArray","_action","_insurancePrice","_insurance","_dataArr","_shop","_shopArr","_index","_configs","_pylons"]; if(diag_tickTime - zero_var_allowedToUnimpound < 10) exitWith {"Du kannst nur alle 10 Sekunden ein Fahrzeug ausparken!" call zero_fnc_msg;}; disableSerialization; if(lbCurSel 2802 isEqualTo -1) exitWith {(localize "STR_Global_NoSelection") call zero_fnc_msg;}; _dataArr = call compile format["%1",(lbData[2802,(lbCurSel 2802)])]; _vehicle = _dataArr select 0; if(_vehicle isKindOf "Air" && !isNil "zero_var_airstop") exitWith {"Luftfahrzeuge können derzeit leider nicht ausgeparkt oder gekauft werden." call zero_fnc_msg;}; _insurance = switch (_dataArr select 3) do { case 0: {false}; case 1: {true}; }; _vid = lbValue[2802,(lbCurSel 2802)]; _pid = getPlayerUID player; if(isNil "_vehicle") exitWith {(localize "STR_Garage_Selection_Error") call zero_fnc_msg;}; _insurancePrice = 0; _price = getNumber(missionConfigFile >> "zero_CfgVehicles" >> _vehicle >> "garage_fee"); _pylons = getArray(missionConfigFile >> "zero_CfgVehicles" >> _vehicle >> "pylons"); if(playerSide isEqualTo independent || playerSide isEqualTo west || zero_var_garage_mode == "Gangeroberung") then {_price = 0;}; if(zero_var_garage_mode == "Ganghaus" && !(_vehicle in ["C_Hatchback_01_F","C_Offroad_01_F","C_SUV_01_F","C_Hatchback_01_sport_F","B_G_Offroad_01_F","B_Quadbike_01_F","C_Offroad_02_unarmed_F"])) exitWith {"Dieses Fahrzeug kannst du hier nicht ausparken!" call zero_fnc_msg;}; if(zero_var_garage_mode == "GanghausLKW" && !(_vehicle in ["C_Hatchback_01_F","C_Offroad_01_F","C_SUV_01_F","C_Hatchback_01_sport_F","B_G_Offroad_01_F","B_Quadbike_01_F","C_Offroad_02_unarmed_F","B_GEN_Van_02_transport_F", "C_Van_02_vehicle_F" ,"C_Van_02_transport_F" ,"C_Van_02_medevac_F", "C_Van_01_transport_F", "O_Truck_02_box_F" ,"C_Van_01_box_F" ,"C_Van_01_fuel_F" ,"I_Truck_02_transport_F","B_Truck_01_mover_F" ,"I_Truck_02_covered_F" ,"O_Truck_02_fuel_F" ,"O_Truck_03_transport_F", "O_Truck_03_fuel_F" ,"O_Truck_03_device_F", "O_Truck_03_covered_F","B_Truck_01_box_F","B_Truck_01_covered_F","B_Truck_01_fuel_F","B_Truck_01_transport_F"])) exitWith {"Dieses Fahrzeug kannst du hier nicht ausparken!" call zero_fnc_msg;}; if(zero_var_garage_mode == "GanghausArmored" && !(_vehicle in ["C_Hatchback_01_F","C_Offroad_01_F","C_SUV_01_F","C_Hatchback_01_sport_F","B_G_Offroad_01_F","B_Quadbike_01_F","C_Offroad_02_unarmed_F", "B_MRAP_01_F", "O_MRAP_02_F","I_MRAP_03_F", "B_G_Offroad_01_armed_F","B_T_LSV_01_unarmed_F","O_T_LSV_02_unarmed_F"])) exitWith {"Dieses Fahrzeug kannst du hier nicht ausparken!" call zero_fnc_msg;}; if(zero_var_garage_mode == "GanghausBoth" && !(_vehicle in ["C_Hatchback_01_F","C_Offroad_01_F","C_SUV_01_F","C_Hatchback_01_sport_F","B_G_Offroad_01_F","B_Quadbike_01_F","C_Offroad_02_unarmed_F","B_GEN_Van_02_transport_F", "C_Van_02_vehicle_F" ,"C_Van_02_transport_F" ,"C_Van_02_medevac_F", "C_Van_01_transport_F", "O_Truck_02_box_F" ,"C_Van_01_box_F" ,"C_Van_01_fuel_F" ,"I_Truck_02_transport_F","B_Truck_01_mover_F" ,"I_Truck_02_covered_F" ,"O_Truck_02_fuel_F" ,"O_Truck_03_transport_F","O_Truck_03_fuel_F" ,"O_Truck_03_device_F", "O_Truck_03_covered_F","B_Truck_01_box_F","B_Truck_01_covered_F","B_Truck_01_fuel_F","B_Truck_01_transport_F","B_MRAP_01_F","B_MRAP_01_hmg_F","I_MRAP_03_F","O_MRAP_02_F","O_MRAP_02_hmg_F","I_MRAP_03_hmg_F","B_APC_Wheeled_01_cannon_F","B_AFV_Wheeled_01_up_cannon_F","I_APC_Wheeled_03_cannon_F","B_G_Offroad_01_armed_F"])) exitWith {"Dieses Fahrzeug kannst du hier nicht ausparken!" call zero_fnc_msg;
}; _action = false; if(cbChecked ((findDisplay 2800) displayCtrl 2804)) then { _insurance = true; if(playerSide in [civilian,east]) then { _configs = getArray(missionConfigFile >> "zero_VehicleShops" >> "kart_shop" >> "vehicles") + getArray(missionConfigFile >> "zero_VehicleShops" >> "civ_car" >> "vehicles") + getArray(missionConfigFile >> "zero_VehicleShops" >> "civ_truck" >> "vehicles") + getArray(missionConfigFile >> "zero_VehicleShops" >> "civ_air" >> "vehicles") + getArray(missionConfigFile >> "zero_VehicleShops" >> "civ_ship" >> "vehicles") + getArray(missionConfigFile >> "zero_VehicleShops" >> "reb_car" >> "vehicles") + getArray(missionConfigFile >> "zero_VehicleShops" >> "reb_air" >> "vehicles") + getArray(missionConfigFile >> "zero_VehicleShops" >> "reb_jet" >> "vehicles") + getArray(missionConfigFile >> "zero_VehicleShops" >> "gang_car" >> "vehicles"); { if(_vehicle == (_x select 0)) exitWith { _insurancePrice = round((_x select 1) * 1.5 * 0.7); }; }forEach _configs; }else{ _shop = format["%1_%2",if(playerSide isEqualTo west) then {"cop"}else{"feuerwehr"},toLower(zero_var_garage_type)]; _shopArr = (getArray(missionConfigFile >> "zero_VehicleShops" >> _shop >> "vehicles")); _index = [_vehicle,_shopArr] call zero_fnc_findIndex; if(_index != -1) then { _insurancePrice = round((((_shopArr select _index) select 1) * 1.5) * 0.7); }; }; _action = [ format["Möchtest du %1€ für die Versicherung (%2€) + Ausparkkosten (%3€) bezahlen?",[_price + _insurancePrice] call zero_fnc_numberText, [_insurancePrice] call zero_fnc_numberText, [_price] call zero_fnc_numberText], "Fahrzeug mit Versicherung ausparken","Ja","Nein" ] call BIS_fnc_guiMessage; }else{ _action = true; }; if(!_action) exitWith {}; _price = _price + _insurancePrice; if(([2, 0] call zero_fnc_Z0Check) < _price) exitWith {(format[(localize "STR_Garage_CashError"),[_price] call zero_fnc_numberText]) call zero_fnc_msg;}; private _spawnPos = zero_var_garage_sp; private _spawnDir = 0; if(typeName zero_var_garage_sp == "ARRAY") then { _spawnPos = zero_var_garage_sp select 0; _spawnDir = zero_var_garage_sp select 1; }else{ if(typeName zero_var_garage_sp == "STRING") then { _spawnPos = (getMarkerPos zero_var_garage_sp); _spawnDir = (markerDir zero_var_garage_sp); }; }; if(count (nearestObjects[_spawnPos,["Car","Air","Ship"],15]) > 0) exitWith {(localize "STR_Garage_SpawnPointError") call zero_fnc_msg;}; _spawnPos = if(zero_var_garage_sp isEqualTo "air_g_3") then { [21953.5,12603.2,23.7] } else { [_spawnPos select 0,_spawnPos select 1,(_spawnPos select 2) + 0.5] }; zero_var_allowedToUnimpound = diag_tickTime; _nearestcity = ""; _dis = 999999; { _temp = player distance (getMarkerPos (_x select 0)); if(_temp < _dis) then { _dis = _temp; _nearestcity = _x select 1; }; } forEach [["civ_spawn_1", "KAV"], ["civ_spawn_7","NEO"], ["civ_spawn_2", "PYR"], ["civ_spawn_3", "ATH"], ["civ_spawn_4", "SOF"]]; [[_vid,player,_spawnPos,_spawnDir,_insurance,_price,_pylons,_nearestcity],"zero_fnc_spawnVehicle",zero_var_HC1_owner,false] call zero_fnc_sendPacket; _tmpArray = []; switch (zero_var_garage_type) do { case "Ship": { { if (_x select 0 != _vid) then { _tmpArray pushBack _x; }; } forEach zero_var_shipVehicles; zero_var_shipVehicles = _tmpArray; }; case "Car": { { if (_x select 0 != _vid) then { _tmpArray pushBack _x; }; } forEach zero_var_carVehicles; zero_var_carVehicles = _tmpArray; }; case "Air": { { if (_x select 0 != _vid) then { _tmpArray pushBack _x; }; } forEach zero_var_airVehicles; zero_var_airVehicles = _tmpArray; }; default {}; }; closeDialog 0; [localize "STR_Garage_SpawningVeh",1,"",true] call zero_fnc_msg;
