if (!hasInterface) exitWith {}; params [ ["_force",false,[false]] ]; private _group = group player; private _arr = if (_force) then { []; } else { (_group getVariable ["zero_var_gang_buffs",[[],[]]]) select 1; }; private _farmMultiplier = 0; private _specialgangshop = false; private _specialgangdealer = false; private _chopshop = false; private _stamina = false; private _healing = false; private _xpboost = 1; private _exp = []; { private _buff = _x select 0; private _startTime = parseNumber (_x select 1); private _expiringTime = getNumber(missionConfigFile >> "zero_CfgBuffs" >> "buffs" >> _buff >> "duration"); private _max = getNumber (missionConfigFile >> "zero_CfgBuffs" >> "buffs" >> _buff >> "max"); private _multiplier = (getNumber (missionConfigFile >> "zero_CfgBuffs" >> "buffs" >> _buff >> "multiplier")); private _dealer = if (_buff isEqualTo "dealer") then { if (zero_var_server_dealer) then { true; } else { false; }; } else { true; }; if ((_startTime + _expiringTime) > (zero_var_unixtime + serverTime) && _dealer) then { switch _buff do { case "farm": { _farmMultiplier = _farmMultiplier + _multiplier; if ( _farmMultiplier > (_max * _multiplier)) then { _farmMultiplier = _max * _multiplier; }; [_expiringTime,_startTime] spawn { _expiringTime = _this select 0; _startTime = _this select 1; uiSleep ((_startTime + _expiringTime) - (zero_var_unixtime + serverTime)); false call zero_fnc_refreshBuffs; }; }; case "shop": { _specialgangshop = true; }; case "dealer": { _specialgangdealer = true; }; case "stamina": { _stamina = true; [_expiringTime,_startTime] spawn { _expiringTime = _this select 0; _startTime = _this select 1; uiSleep ((_startTime + _expiringTime) - (zero_var_unixtime + serverTime)); false call zero_fnc_refreshBuffs; }; }; case "healing": { _healing = true; [_expiringTime,_startTime] spawn { _expiringTime = _this select 0;
_startTime = _this select 1; uiSleep ((_startTime + _expiringTime) - (zero_var_unixtime + serverTime)); false call zero_fnc_refreshBuffs; }; }; case "xpboost": { _xpboost = _multiplier; [_expiringTime,_startTime] spawn { _expiringTime = _this select 0; _startTime = _this select 1; uiSleep ((_startTime + _expiringTime) - (zero_var_unixtime + serverTime)); false call zero_fnc_refreshBuffs; }; }; }; } else { _exp pushBack _buff; }; } forEach _arr; zero_var_buff_farmMultiplier = 1 + _farmMultiplier; zero_var_buff_specialgangshop = _specialgangshop; zero_var_buff_specialgangdealer = _specialgangdealer; zero_var_buff_stamina = _stamina; zero_var_buff_healing = _healing; zero_var_buff_xpboost = _xpboost; if (!(_exp isEqualTo [])) then { [[_exp,_group],"zero_fnc_buffCleanup",zero_var_hc1_owner,false] call zero_fnc_sendPacket; { private _name = getText (missionConfigFile >> "zero_CfgBuffs" >> "buffs" >> _x >> "name"); private _msg = format ["Der Buff %1 ist abgelaufen",_name]; [_msg,1,"Buff System"] call zero_fnc_msg; } forEach _exp; }; private _buffs = (_group getVariable ["zero_var_gang_buffs",[[],[]]]); if (_buffs isEqualTo [[],[]] && (zero_var_buff_specialgangshop || zero_var_buff_specialgangdealer)) exitWith {player setVariable ["zero_var_kick",false,true];}; if (_buffs isEqualTo [[],[]] && zero_var_buff_farmMultiplier != 1) exitWith {player setVariable ["zero_var_kick",false,true];}; if (_buffs isEqualTo [[],[]]) exitWith {}; private _tmparr = []; { private _class = _x select 0; _tmparr pushBack _class; private _cnt = {_x isEqualTo _class;} count _tmparr; private _max = getNumber(missionConfigFile >> "zero_CfgBuffs" >> "buffs" >> _class >> "max"); private _multiplier = getNumber(missionConfigFile >> "zero_CfgBuffs" >> "buffs" >> _class >> "multiplier"); if (_cnt > _max) then { player setVariable ["zero_var_kick",false,true]; }; if (zero_var_buff_farmMultiplier > (1 + _multiplier * _cnt)) then { player setVariable ["zero_var_kick",false,true]; }; } forEach _arr;
