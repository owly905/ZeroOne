if (!hasInterface) exitWith {}; private["_mode","_display","_titel","_text","_unten","_gangName","_ok","_fehler","_id","_exit","_action","_gruender","_gangData","_gang","_price","_close","_chrByte","_allowed"]; _gang = (group player) getVariable ["zero_var_gang",[]]; if(!(_gang isEqualTo [])) exitWith {"Du bist bereits in einer Gang" call zero_fnc_msg;}; _mode = param [0,0,[0]]; disableSerialization; createDialog "zero_var_gangerstellen"; _display = findDisplay 3200; if (isNull _display) exitWith {}; _text = _display displayCtrl 3201; _titel = _display displayCtrl 3202; _ok = _display displayCtrl 3203; _ok ctrlSetText "Überprüfen"; _ok buttonSetAction "zero_var_gangWeiter = true;"; _unten = _display displayCtrl 3204; _close = _display displayCtrl 3205; _titel ctrlSetStructuredText parseText format["<t align='center' size='1'>Bitte gib deinen gewünschten <t color='#DC143C'> Gangnamen </t>ein.</t>"]; _unten ctrlSetStructuredText parseText format["<t align='center' size='1'>Es sind nur <br/> Buchstaben, Zahlen, Leerzeichen und beschränkte Sonderzeichen erlaubt!</t>"]; while {true} do { _fehler = nil; zero_var_gangWeiter = false; _text ctrlSetText ""; _gangName = ""; waitUntil {zero_var_gangWeiter || isNull (findDisplay 3200)}; zero_var_gangWeiter = nil; if (isNull (findDisplay 3200)) exitWith {_exit = true;}; _gangName = ctrlText _text; if (_gangName isEqualTo "") then { _fehler = true; _unten ctrlSetStructuredText parseText format["<t align='center' size='1' color='#DC143C'>Das Eingabefeld ist leer.</t>"]; }else { if ((count _gangName) > 24) then { _fehler = true; _unten ctrlSetStructuredText parseText format["<t align='center' size='1' color='#DC143C'>Der Gangname ist länger als 24 Zeichen</t>"]; }else{ _chrByte = toArray (_gangName); _allowed = toArray("!#$%&()*+,-./0123456789<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_abcdefghijklmnopqrstuvwxyz|~ "); { if (!(_x in _allowed)) exitWith { _fehler = true; _unten ctrlSetStructuredText parseText format["<t align='center' size='1' color='#DC143C'>Das Zeichen %1 ist im Gangnamen nicht erlaubt!</t>",toString [_x]]; }; }forEach _chrByte; }; }; if (isNil "_fehler") then { _unten ctrlSetStructuredText parseText format["<t align='center' size='1' color='#EDF5F5'>Der Gangname %1 wird überprüft!</t>",_gangName]; [[clientOwner,0,_gangName],"zero_fnc_checkGangnameTag",zero_var_HC1_owner,false] call zero_fnc_sendPacket;
waitUntil {!isNil "zero_var_gangReturn"}; if (!(zero_var_gangReturn isEqualTo [])) then { _fehler = true; _unten ctrlSetStructuredText parseText format["<t align='center' size='1' color='#DC143C'>Der Gangname %1 ist bereits belegt!</t>",_gangName]; zero_var_gangReturn = nil; }; zero_var_gangReturn = nil; }; if (isNil "_fehler") exitWith{}; }; if (!isNil "_exit") exitWith {}; _price = if(_mode isEqualTo 0) then {25000}else{200000}; _action = [ parseText format["Möchtest du %1€ für das Erstellen der Gang <t color='#0BDA51'>%2</t> bezahlen?",[_price] call zero_fnc_numberText,_gangName], "Gang erstellen", localize "STR_Global_Yes", localize "STR_Global_No" ] call BIS_fnc_guiMessage; if(!_action) exitWith {closeDialog 0}; if([2, 0] call zero_fnc_Z0Check < _price) exitWith { (format["Du hast nicht genug Geld auf der Bank. Es fehlen dir %1",[_price - ([2, 0] call zero_fnc_Z0Check)] call zero_fnc_numberText]) call zero_fnc_msg; closeDialog 0;}; [0, ([2, 0] call zero_fnc_Z0Check) - _price] call zero_fnc_Z0Check; _gruender = getPlayerUID player; _id = format ["%1%2",round random 9999,round random 9999]; if(_mode isEqualTo 1) then { _unten ctrlSetStructuredText parseText format["<t align='center' size='1' color='#EDF5F5'>Die Gang %1 wird erstellt!</t>",_gangName]; _ok ctrlEnable false; _close ctrlEnable false; [[clientOwner,0,[_id,_gangName,_gruender,[[_gruender,6]],""]],"zero_fnc_newDeleteGang",zero_var_HC1_owner,false] call zero_fnc_sendPacket; waitUntil {!isNil "zero_var_gangReturn"}; zero_var_gangReturn = nil; [format ["Die permanente Gang %1 wurde erfolgreich erstellt. Der Owner ist %2",_gangName,player getVariable["zero_var_realname", name player]],1] call zero_fnc_msg; [[clientOwner,8,[_id, getPlayerUID player, playerSide]],"zero_fnc_updateGang",zero_var_HC1_owner,false] call zero_fnc_sendPacket; }else{ [format ["Die temporäre Gang %1 wurde erfolgreich erstellt. Der Owner ist %2",_gangName,player getVariable["zero_var_realname", name player]],1] call zero_fnc_msg; }; if(!isNil "_exit") exitWith {while {dialog} do {closeDialog 0;}; [0, ([2, 0] call zero_fnc_Z0Check) + _price] call zero_fnc_Z0Check;}; closeDialog 0; [player] joinSilent grpNull; player setRank "COLONEL"; _gangData = [_id, _gangName,_gruender,[[_gruender,6,player getVariable["zero_var_realname",name player]]],8,0,[[],[]],""]; if(_mode isEqualTo 0) then { _gangData pushBack true; }; (group player) setVariable ["zero_var_gang",_gangData,true]; while {dialog} do {closeDialog 0};
