if (!hasInterface) exitWith {}; private["_group","_gang","_display","_title","_playerListTitle","_gangPlayerListTitle","_playerList","_gangPlayerList","_player","_index"]; _group = (group player); _gang = _group getVariable ["zero_var_gang",[]]; if(_gang isEqualTo []) exitWith {"Du bist in keiner Gang" call zero_fnc_msg;}; if(count _gang < 7) exitWith {"Es ist ein Fehler aufgetreten" call zero_fnc_msg;}; disableSerialization; _display = findDisplay 3400; if (isNull _display) exitWith {}; _title = _display displayCtrl 3401; _playerListTitle = _display displayCtrl 3402; _gangPlayerListTitle = _display displayCtrl 3403; _playerList = _display displayCtrl 3404; _gangPlayerList = _display displayCtrl 3405; if(lbCurSel _gangPlayerList isEqualTo -1) exitWith {"Du hast niemand ausgewÃ¤hlt!" call zero_fnc_msg;}; _player = _gangPlayerList lbData (lbCurSel _gangPlayerList); _player = call compile format ["%1", _player];
if(_player == player) exitWith {"Du kannst dich nicht selbst entfernen!" call zero_fnc_msg;}; if(getPlayerUID _player == (_gang select 2)) exitWith {"Du kannst den Owner nicht entfernen!" call zero_fnc_msg;}; _playerList lbAdd format ["%1", _player getVariable["zero_var_realname",name _player]]; _playerList lbSetData [(lbSize _playerList)-1,str(_player)]; _gangPlayerList lbDelete (lbCurSel _gangPlayerList); _gangPlayerListTitle ctrlSetStructuredText parseText format["<t align='center' size='1.25'>Gangmitglieder %1/%2</t>",lbSize _gangPlayerList, _gang select 4]; _index = [str(_player),zero_var_gangMemberAdd] call zero_fnc_findIndex; if(_index != -1) then { zero_var_gangMemberAdd deleteAt _index; }else{ _index = [str(_player),zero_var_gangMemberRemove] call zero_fnc_findIndex; if(_index isEqualTo -1) then { zero_var_gangMemberRemove pushBack [str(_player),[getPlayerUID _player,0]]; }; }; lbSort _playerList; lbSort _gangPlayerList;
