if (!hasInterface) exitWith {}; private["_group","_gang","_member","_maxMember","_player","_uid","_index","_rang","_data","_id","_exit","_gangKonto","_price","_newMember"]; _group = (group player); _gang = _group getVariable ["zero_var_gang",[]]; if(_gang isEqualTo []) exitWith {"Du bist in keiner Gang" call zero_fnc_msg;}; if(count _gang < 7) exitWith {"Es ist ein Fehler aufgetreten" call zero_fnc_msg;}; if(((group player) getVariable["zero_var_gangMemberInUse",objNull]) != player) exitWith {"Jemand anderes greift auf die Mitgliederverwaltung zu!" call zero_fnc_msg;}; if((zero_var_gangMemberAdd isEqualTo []) && (zero_var_gangMemberRemove isEqualTo []) && (zero_var_gangMemberChangeRank isEqualTo []) && (isNil "zero_var_gangOfflineKick")) exitWith {}; _id = _gang select 0; _member = _gang select 3; _maxMember = _gang select 4; _gangKonto = _gang select 5; _newMember = (count zero_var_gangMemberAdd) - (count zero_var_gangMemberRemove); if((count _member) + _newMember > _maxMember) exitWith {"Du überschreitest deine Mitgliederkapazität! Du musst deine Gang zuerst upgraden." call zero_fnc_msg;}; _price = if(typeName (_gang select(count _gang -1)) == "BOOL") then {((count zero_var_gangMemberAdd) * 2500)} else {((count zero_var_gangMemberAdd) * 15000)}; if(!(zero_var_gangMemberAdd isEqualTo [])) then { private _action = [ format["Möchtest du %1 für das Einladen von %3 Mitgliedern bezahlen?",[_price] call zero_fnc_numberText,[count zero_var_gangMemberAdd] call zero_fnc_numberText], "Gang Member einladen", localize "STR_Global_Yes", localize "STR_Global_No" ] call BIS_fnc_guiMessage; if(!_action) exitWith {_exit = true;}; if(_gangKonto < _price) exitWith { _exit = true; (format ["Deine Gang hat nicht genug Geld auf dem Konto. Es fehlen %1€", [_price - _gangKonto] call zero_fnc_numberText]) call zero_fnc_msg; }; }; if(!isNil "_exit") exitWith {}; { _player = _x select 0;
_data = _x select 1; _index = [_data select 0,_member] call zero_fnc_findIndex; if(_index isEqualTo -1) then { _member pushBack _data; }; _player = call compile _player; [[_group,player],"zero_fnc_gangMemberInvite",_player,false] call zero_fnc_sendPacket; } forEach zero_var_gangMemberAdd; { _player = _x select 0; _uid = (_x select 1) select 0; _index = [_uid, _member] call zero_fnc_findIndex; if(_index != -1) then { _member deleteAt _index; }; _player = call compile _player; [_player] joinSilent grpNull; [[],"zero_fnc_gangMemberKick",_player] call zero_fnc_sendPacket; } forEach zero_var_gangMemberRemove; { _player = _x select 0; _rang = _x select 1; _player = call compile _player; _index = [getPlayerUID _player, _member] call zero_fnc_findIndex; if(_index != -1) then { _data = _member select _index; _data set[1, _rang]; _member set[_index, _data]; switch (_rang) do { case 1: {_player setRank "CORPORAL";}; case 2: {_player setRank "SERGEANT";}; case 3: {_player setRank "LIEUTENANT";}; case 4: {_player setRank "CAPTAIN";}; case 5: {_player setRank "MAJOR";}; case 6: {_player setRank "COLONEL";}; default {_player setRank "PRIVATE";}; }; }; } forEach zero_var_gangMemberChangeRank; zero_var_gangMemberRemove = []; zero_var_gangMemberAdd = []; zero_var_gangMemberChangeRank = []; zero_var_gangOfflineKick = nil; _gang set[3,_member]; _gang set[5,(_gangKonto - _price)]; _group setVariable["zero_var_gang",_gang,true]; closeDialog 0; if(typeName (_gang select(count _gang -1)) == "BOOL") exitWith {}; waitUntil {isNull (findDisplay 3400)}; [[clientOwner,0,[((group player) getVariable "zero_var_gang") select 0,((group player) getVariable "zero_var_gang") select 3]],"zero_fnc_updateGang",zero_var_HC1_owner,false] call zero_fnc_sendPacket; [[clientOwner,1,[((group player) getVariable "zero_var_gang") select 0,((group player) getVariable "zero_var_gang") select 5]],"zero_fnc_updateGang",zero_var_HC1_owner,false] call zero_fnc_sendPacket; zero_var_gangKontoUpdate = nil; [] spawn zero_fnc_gangUpdateGanginfo;
