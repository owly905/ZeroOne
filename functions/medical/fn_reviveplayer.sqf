if (!hasInterface) exitWith {}; private ["_target","_targetName","_ui","_progress","_titleText","_cP","_title","_damage","_val","_reviveMoney","_chance","_badDistance","_res"]; _target = param[0,objNull,[objNull]]; _reviveMoney = 40000; if(isNull _target) exitWith {}; if(_target getVariable["zero_var_revive",false]) exitWith {}; if(_target getVariable ["zero_var_reviving",objNull] == player) exitWith {(localize "STR_Medic_AlreadyReviving") call zero_fnc_msg;}; if(player distance _target > 7) exitWith {}; if((_target getVariable["zero_var_side",sideUnknown]) == independent || playerSide != independent) then {_reviveMoney = 0;}; _targetName = _target getVariable["zero_var_name","Unknown"]; _title = format[localize "STR_Medic_Progress",_targetName]; zero_var_action_inUse = true; _val = 0.9; _chance = 0; if(playerSide isEqualTo independent) then { _res = ["revive"] call zero_fnc_getSkillValueCharacter; _val = _res select 0; _chance = _res select 1; }; _target setVariable["zero_var_reviving",player,true]; disableSerialization; 5 cutRsc ["zero_var_progress","PLAIN"]; _ui = uiNamespace getVariable ["zero_var_progress",displayNull]; _progress = _ui displayCtrl 38201; _titleText = _ui displayCtrl 38202; _titleText ctrlSetText format["%2 (1%1)...","%",_title]; _progress progressSetPosition 0.01; _cP = 0.01; _badDistance = false; for "_i" from 0 to 100 step 1 do { if(animationState player != "AinvPknlMstpsnonWnonDnon_medic_1" ) then { player action ["SwitchWeapon", player, player, 100]; player playMove "AinvPknlMstpsnonWnonDnon_medic_1"; player playActionNow "stop"; player playMove "AinvPknlMstpsnonWnonDnon_medic_1"; player playActionNow "stop"; player playMove "AinvPknlMstpsnonWnonDnon_medic_1"; }; uiSleep _val; _cP = _cP + 0.01; _progress progressSetPosition _cP; _titleText ctrlSetText format["%3 (%1%2)...",round(_cP * 100),"%",_title];
if(_cP >= 1 || !alive player) exitWith {}; if(zero_var_interrupted) exitWith {}; if(zero_var_istazed) exitWith {}; if((player getVariable["zero_var_restrained",false])) exitWith {}; if(player distance _target > 4) exitWith {_badDistance = true;}; if(_target getVariable["zero_var_revive",false]) exitWith {}; if(_target getVariable["zero_var_reviving",objNull] != player) exitWith {}; }; zero_var_action_inUse = false; 5 cutText ["","PLAIN"]; player playActionNow "stop"; if(_target getVariable ["zero_var_reviving",objNull] != player) exitWith {(localize "STR_Medic_AlreadyReviving") call zero_fnc_msg; zero_var_action_inUse = false;}; _target setVariable["zero_var_reviving",nil,true]; if(!alive player || zero_var_istazed) exitWith {zero_var_action_inUse = false;}; if(_target getVariable["zero_var_revive",false]) exitWith {(localize "STR_Medic_RevivedRespawned") call zero_fnc_msg; zero_var_action_inUse = false;}; if((player getVariable["zero_var_restrained",false])) exitWith {zero_var_action_inUse = false;}; if(_badDistance) exitWith {titleText[localize "STR_Medic_TooFar","PLAIN"]; zero_var_action_inUse = false;}; if(zero_var_interrupted) exitWith {zero_var_interrupted = false; titleText[localize "STR_NOTF_ActionCancel","PLAIN"]; zero_var_action_inUse = false;}; zero_var_action_inUse = false; _target setVariable["zero_var_revive",true,true]; _damage = false; if(random(100) > _chance || playerSide != independent) then { [false,"defibrillator",1] call zero_fnc_handleZOInv; ["Der Patient hat noch weitere Verletzungen erlitten",2,"Eine Nachbehandlung ist nÃ¶tig"] call zero_fnc_msg; _damage = true; }; [[player,_damage],"zero_fnc_revived",_target] call zero_fnc_sendPacket; if(_reviveMoney > 0) then { [0, ([2, 0] call zero_fnc_Z0Check) + _reviveMoney] call zero_fnc_Z0Check; titleText[format[localize "STR_Medic_RevivePayReceive",_targetName,[_reviveMoney] call zero_fnc_numberText],"PLAIN"]; ["revive"] call zero_fnc_improveSkillCharacter; }; uiSleep 0.6; player reveal _target;
