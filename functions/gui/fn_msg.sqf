params [ ["_txt","",["",text ""]], ["_type",0,[0]], ["_ctxt","",["",text ""]], ["_fast",false,[false]], ["_prio",2,[0]], ["_sound","",[""]] ]; if (_txt isEqualType text "") then {_txt = str _txt;}; if (_ctxt isEqualType text "") then {_ctxt = str _ctxt;}; if (_txt isEqualTo "" && _ctxt isEqualTo "") exitWith {}; switch _type do { case 0 : { _sound = "message_error"; }; case 1 : { _sound = "message"; }; case 2 : { _sound = "3DEN_notificationDefault"; }; case 3 : { _prio = 1;
_sound = "defaultNotification"; }; case 4 : { _prio = 0; _sound = "defaultNotification"; }; }; private _found = false; private _tmp = zero_var_msgArr select _prio; { private _tmptxt = _x select 0; if (_tmptxt isEqualTo _txt) then { private _tmpctxt = _x select 1; if (_tmpctxt isEqualTo _ctxt) exitWith { _found = true; }; }; if (_found) exitWith {}; } forEach _tmp; if (_found) exitWith {}; _tmp pushback [_txt,_ctxt,_fast,_sound]; if (!zero_var_msg) then { zero_var_msg = true; 0 spawn zero_fnc_msgDisplay; };
