if(!hasInterface) exitWith {};
 if(playerSide isEqualTo west || playerSide isEqualTo independent) exitWith {};
 if(!isNull (objectParent player)) exitWith {(localize "STR_NOTF_VehicleGetOut") call zero_fnc_msg;
};
 if(player getVariable["zero_var_restrained",false]) exitWith {(localize "STR_General_Zipties_Error") call zero_fnc_msg;
};
 private _index = ["artifact",zero_var_inventory] call zero_fnc_findIndex;
 if(_index isEqualTo -1) exitWith {(format["Du hast kein %1 dabei!",getText(missionConfigFile >> "zero_CfgItems" >> "artifact" >> "name")]) call zero_fnc_msg;
};
 private _hasLicense = missionNamespace getVariable ((["artifact",0] call zero_fnc_licenseType) select 0);
 private _count = (zero_var_inventory select _index) select 1;
 private _cost = 5000 * _count;
 if(!_hasLicense && ([3, 0] call zero_fnc_Z0Check) < _cost) exitWith {(format[localize "STR_Process_License",[_cost] call zero_fnc_numberText]) call zero_fnc_msg;
};
 ["Bleibe in einem Radius von 10m",2] call zero_fnc_msg;
 disableSerialization;
 5 cutRsc ["zero_var_progress","PLAIN"];
 private _ui = uiNamespace getVariable "zero_var_progress";
 private _progress = _ui displayCtrl 38201;
 private _pgText = _ui displayCtrl 38202;
 _pgText ctrlSetText format["Identifiziere Artefakt (0%1)...","%"];
 _progress progressSetPosition 0.01;
 private _cP = 0.0083;
 private _pos = position player;
 private _exit = false;
 zero_var_is_processing = true;
 while{true} do { uiSleep 1.2;
 _cP = _cP + 0.0083;
 _progress progressSetPosition _cP;
 _pgText ctrlSetText format["Identifiziere Artefakt (%1%2)...",round(_cP * 100),"%"];
 if(_cP >= 1) exitWith {};
 if(player distance _pos > 10.5) exitWith { _exit = true;
 "Du bist zu weit weg gelaufen!" call zero_fnc_msg;
};
 if!(alive player) exitWith {_exit = true;
};
 if(player getVariable["zero_var_restrained",false]) exitWith {_exit = true;

};
 if(!isNull (ObjectParent player)) exitWith {"Du sitzt in einem Fahrzeug" call zero_fnc_msg;
 _exit = true;
};
 };
 5 cutText ["","PLAIN"];
 zero_var_is_processing = false;
 if(_exit) exitWith {};
 if(!_hasLicense && ([3, 0] call zero_fnc_Z0Check) < _cost) exitWith {(format[localize "STR_Process_License",[_cost] call zero_fnc_numberText]) call zero_fnc_msg;
};
 if(!_hasLicense) then { [1, ([3, 0] call zero_fnc_Z0Check) - _cost] call zero_fnc_Z0Check;
 };
 private _random = round(random(100));
 if(!([false,"artifact",_count] call zero_fnc_handleZOInv)) exitWith {};
 private _rnd = round(random(10));
 if(_rnd < 3) exitWith {"Das Artefakt ist leider zerbrochen" call zero_fnc_msg};
 private _new = switch (true) do { case(_random < 40): {"artifact_worthless"};
 case(_random >= 40 && _random < 67): {"artifact_minor"};
 case(_random >= 67 && _random < 77): {"artifact_unidentifiable"};
 case(_random >= 77 && _random < 92): {"artifact_unique"};
 case(_random >= 92): {"artifact_valuable"};
 };
 if(!([true,_new,_count] call zero_fnc_handleZOInv)) exitWith {[true,"artifact",_count] call zero_fnc_handleZOInv;
};
 private _text = switch (_new) do { case "artifact_worthless": {"Wertloses Artefakt"};
 case "artifact_minor": {"Minderes Artefakt"};
 case "artifact_unidentifiable": {"Unidentifizierbares Artefakt"};
 case "artifact_unique": {"Ungewöhnliches Artefakt"};
 case "artifact_valuable": {"Wertvolles Artefakt"};
 default {"ERROR"};
 };
 [format ["ITEM PROCESSED: %1 (%2, %3) hat 1 Unidentifiziertes Artefakt identifiziert => 1 %4",player getVariable["zero_var_realname",name player], getPlayerUID player, playerSide, _text]] call zero_fnc_zoLog;
 [format["Du hast %1 %2 %3erhalten", _count, getText(missionConfigFile >> "zero_CfgItems" >> _new >> "name"), if(_hasLicense) then {""}else{format["für %1€ ",[_cost] call zero_fnc_numberText]}],1] call zero_fnc_msg;

