
















































































































































































































































































disableSerialization; params [ ["_mode", "", [""]], ["_params", [], [[]]] ]; switch _mode do { case "onLoad": { _params params [ ["_display", displayNull, [displayNull]] ]; MAV_guiNavigationCalculateWO_Spam = diag_tickTime; MAV_guiNavigationCalculate_HasStarted = false; private _close = _display displayCtrl 0x03; _close ctrlAddEventHandler ["ButtonClick", {ctrlParent (_this select 0) closeDisplay 0;}]; private _tabControl = _display displayCtrl 0x08; _tabControl ctrlAddEventHandler ["ToolBoxSelChanged", {["tabChanged", _this] call MAV_guiNavigationCalculateWO;}]; MAV_guiNavigationCalculateWO_Angle = 0; MAV_guiNavigationCalculateWO_Text = (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgRouteCalculate")); MAV_guiNavigationCalculateWO_LastText = ""; MAV_guiNavigationCalculateWO_distance = ["distance", 0] call MAV_gps_fnc_fetchSettings; private _paths = ["km/h", "mph"]; private _count = count _paths; if ((MAV_guiNavigationCalculateWO_distance + 1) > _count) then { MAV_guiNavigationCalculateWO_distance = 0; }; MAV_guiNavigationCalculateWO_distance = [false, true] select (MAV_guiNavigationCalculateWO_distance isEqualTo 1); MAV_guiNavigationNew_info params ["_start", "_mid", "_end", "_route"]; MAV_guiNavigationCalculate_Route = _route; MAV_guiNavigationCalculate_Waypoint = [_start, _mid, _end] apply { if (isNull _x) then { [] } else { getPosATL _x }; }; if !(MAV_guiNavigationCalculate_Route isEqualTo []) then { private _txt = _display displayCtrl 0x07; private _distance = [ _route ] call MAV_gps_fnc_distance; private _totalDistance = [ MAV_guiNavigationCalculateWO_distance, _distance ] call MAV_gps_fnc_kmToMiles; private _timeLeft = (_distance / (75 / 3.6)); private _timeLeftRounded = parseNumber ((_timeLeft / 60) toFixed 0); private _timeLeftText = if (_timeLeft < 60) then { (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgOneMinute")) } else { format [(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgMinutesLeft")), _timeLeftRounded] }; private _searchTypeString = if (mav_gps_v_currentRouteSearchType == "highway") then { "Highway" } else { "Default" }; _txt ctrlSetStructuredText parseText format [ "<t align='left' size='1.1'>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgRouteInfo"))+"</t><br/><t align='left'>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgFrom"))+"</t><t align='right'>%1</t><br/><t align='left'>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgTo"))+"</t><t align='right'>%2</t><br/><t align='left'>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgTotalDistance"))+"</t><t align='right'>%3</t><br/><t align='left'>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgTotalravelTime"))+"</t><t align='right'>%4</t><br/><t>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgRoadPreference"))+"</t><t align='right'>%5</t>", [(MAV_guiNavigationCalculate_Waypoint param [0])] call MAV_gps_fnc_nearestLocation, [(MAV_guiNavigationCalculate_Waypoint param [2])] call MAV_gps_fnc_nearestLocation, _totalDistance, _timeLeftText, _searchTypeString ]; _txt ctrlShow true; private _startBtn = _display displayCtrl 0x01; _startBtn ctrlAddEventHandler ["ButtonClick", {["startRoute", _this] call MAV_guiNavigationCalculateWO}]; _startBtn ctrlShow true; _tabControl ctrlShow true; [MAV_guiNavigationCalculate_Route] call mav_gps_fnc_addPath; } else { MAV_guiNavigationCalculateWO_Rotate = addMissionEventHandler ["EachFrame", {"onEachFrame" call MAV_guiNavigationCalculateWO}]; private _group = _display displayCtrl 0x04; _group ctrlShow true; MAV_guiNavigationCalculateWO_ScriptHandle = ["script", [_display, _start, [_mid, _end], (["path", 0] call MAV_gps_fnc_fetchSettings)]] spawn MAV_guiNavigationCalculateWO; }; _tabControl lbSetCurSel 0; ["tabChanged", [_tabControl, 0]] call MAV_guiNavigationCalculateWO; }; case "onEachFrame": { private _display = uiNamespace getVariable "MAV_guiNavigationCalculateWO"; if (isNil "_display" || {isNull _display}) exitWith {}; private _loadingCtrl = _display displayCtrl 0x05; if (MAV_guiNavigationCalculateWO_Angle > 359) then {MAV_guiNavigationCalculateWO_Angle = 0}; _loadingCtrl ctrlSetAngle [MAV_guiNavigationCalculateWO_Angle, 0.5, 0.5]; MAV_guiNavigationCalculateWO_Angle = MAV_guiNavigationCalculateWO_Angle + 1; if !(MAV_guiNavigationCalculateWO_Text isEqualTo MAV_guiNavigationCalculateWO_LastText) then { MAV_guiNavigationCalculateWO_LastText = MAV_guiNavigationCalculateWO_Text; (_display displayCtrl 0x06) ctrlSetStructuredText parseText format ["<t shadow='0' size='1.2' align='center'>%1</t>", MAV_guiNavigationCalculateWO_Text]; }; }; case "script": { _params params [ ["_display", displayNull, [displayNull]], ["_start", objNull, [objNull]], ["_wayPoints", [], [[]]], ["_option", -1, [0]] ]; private _terraingrid = getTerrainGrid; private _viewdiestance = viewDistance; private _objectdistance = getObjectViewDistance; setTerrainGrid 50; setViewDistance 500; setObjectViewDistance [450, 0]; private _paths = ["default", "highway"]; private _count = count _paths; if ((_option + 1) > _count) then { _option = 0;
}; private _path = _paths select _option; private _meme = _wayPoints select {!isNull _x}; private _timeOut = diag_tickTime + (60 * 2); private _return = [_start, _meme, _path] call MAV_gps_fnc_shortestRoute; waitUntil { !isNil "_return" || { diag_tickTime > _timeOut } }; setTerrainGrid _terraingrid; setViewDistance _viewdiestance; setObjectViewDistance _objectdistance; if (isNull _display) exitWith {}; mav_gps_v_currentRouteSearchType = _path; removeMissionEventHandler ["Draw3D", MAV_guiNavigationCalculateWO_Rotate]; MAV_guiNavigationCalculateWO_Rotate = nil; if (isNil "_return" || {_return isEqualTo []}) then { MAV_guiNavigationCalculateWO_Text = [(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgNoRouteFound")), (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgTimedOut"))] select (isNil "_return"); (_display displayCtrl 0x05) ctrlSetText ""; } else { MAV_guiNavigationCalculateWO_Text = (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgRouteFound")); MAV_guiNavigationCalculate_Route = _return; private _distance = [ _return ] call MAV_gps_fnc_distance; private _totalDistance = [ MAV_guiNavigationCalculateWO_distance, _distance ] call MAV_gps_fnc_kmToMiles; private _timeLeft = (_distance / (75 / 3.6)); private _timeLeftRounded = parseNumber ((_timeLeft / 60) toFixed 0); private _timeLeftText = if (_timeLeft < 60) then { (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgOneMinute")) } else { format [(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgMinutesLeft")), _timeLeftRounded] }; private _searchTypeString = if (mav_gps_v_currentRouteSearchType == "highway") then { "Highway" } else { "Default" }; private _text = _display displayCtrl 0x07; _text ctrlSetStructuredText parseText format [ "<t align='left' size='1.1'>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgRouteInfo"))+"</t><br/><t align='left'>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgFrom"))+"</t><t align='right'>%1</t><br/><t align='left'>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgTo"))+"</t><t align='right'>%2</t><br/><t align='left'>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgTotalDistance"))+"</t><t align='right'>%3</t><br/><t align='left'>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgTotalravelTime"))+"</t><t align='right'>%4</t><br/><t>"+(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgRoadPreference"))+"</t><t align='right'>%5</t>", [(MAV_guiNavigationCalculate_Waypoint param [0])] call MAV_gps_fnc_nearestLocation, [(MAV_guiNavigationCalculate_Waypoint param [2])] call MAV_gps_fnc_nearestLocation, _totalDistance, _timeLeftText, _searchTypeString ]; private _group = _display displayCtrl 0x04; _group ctrlShow false; _text ctrlShow true; private _save = _display displayCtrl 0x02; _save ctrlAddEventHandler ["ButtonClick", {["saveRoute", _this] call MAV_guiNavigationCalculateWO}]; _save ctrlShow true; private _startBtn = _display displayCtrl 0x01; _startBtn ctrlAddEventHandler ["ButtonClick", {["startRoute", _this] call MAV_guiNavigationCalculateWO}]; _startBtn ctrlShow true; private _tabControl = _display displayCtrl 0x08; _tabControl ctrlShow true; [_return] call mav_gps_fnc_addPath; }; }; case "saveRoute": { if (MAV_guiNavigationCalculateWO_Spam > diag_tickTime) exitWith {}; MAV_guiNavigationCalculateWO_Spam = diag_tickTime + 0.5; _params params [ ["_ctrl", controlNull, [controlNull]] ]; _ctrl ctrlShow false; createDialog "MAV_guiNavigationSave"; }; case "startRoute": { if (MAV_guiNavigationCalculateWO_Spam > diag_tickTime) exitWith {}; MAV_guiNavigationCalculateWO_Spam = diag_tickTime + 0.5; _params params [ ["_ctrl", controlNull, [controlNull]] ]; _ctrl ctrlShow false; MAV_guiNavigationCalculate_HasStarted = true; [] call mav_gps_fnc_clearPath; if ([MAV_guiNavigationCalculate_Route] call MAV_gps_fnc_addPath) then { MAV_gps_v_currentRoute = [MAV_guiNavigationCalculate_Waypoint, MAV_guiNavigationCalculate_Route]; true call MAV_gps_fnc_initGPS; { _x closeDisplay 2; } count (allDisplays select {!(ctrlIDD _x in [0, 8, 18, 70, 46, 12])}); }; }; case "onUnload": { MAV_guiNavigationCalculateWO_Spam = nil; MAV_guiNavigationCalculateWO_Angle = nil; MAV_guiNavigationCalculateWO_Text = nil; MAV_guiNavigationCalculateWO_LastText = nil; MAV_guiNavigationCalculateWO_distance = nil; MAV_guiNavigationCalculate_Route = nil; MAV_guiNavigationCalculate_Waypoint = nil; if !(isNil "MAV_guiNavigationCalculateWO_ScriptHandle") then { if !(isNull MAV_guiNavigationCalculateWO_ScriptHandle) then { terminate MAV_guiNavigationCalculateWO_ScriptHandle; }; MAV_guiNavigationCalculateWO_ScriptHandle = nil; }; if !(isNil "MAV_guiNavigationCalculateWO_Rotate") then { removeMissionEventHandler ["Draw3D", MAV_guiNavigationCalculateWO_Rotate]; MAV_guiNavigationCalculateWO_Rotate = nil; }; if (!MAV_guiNavigationCalculate_HasStarted) then { [] call mav_gps_fnc_clearPath; }; }; case "tabChanged": { _params params [ ["_ctrl", controlNull, [controlNull]], ["_index", -1, [0]] ]; private _display = ctrlParent _ctrl; if (_index == 0) then { { (_display displayCtrl _x) ctrlShow true; } forEach [0x07]; { (_display displayCtrl _x) ctrlShow false; } forEach [0x09]; } else { { (_display displayCtrl _x) ctrlShow false; } forEach [0x07]; { (_display displayCtrl _x) ctrlShow true; } forEach [0x09]; }; }; };
