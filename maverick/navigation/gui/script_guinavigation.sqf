






















































































































































































































































































disableSerialization; params [ ["_mode", "", [""]], ["_params", [], [[]]] ]; switch _mode do { case "onLoad": { _params params [ ["_display", displayNull, [displayNull]] ]; MAV_guiNavigation_Controls = []; _display displayAddEventHandler ["ChildDestroyed", {["childDestroyed", _this] call MAV_guiNavigation}]; private _close = _display displayCtrl 0x02; _close ctrlAddEventHandler ["ButtonClick", {ctrlParent (_this select 0) closeDisplay 0;}]; ["refreshControls", [_display]] call MAV_guiNavigation; }; case "childDestroyed": { _params params ["_display", "_child", "_exit"]; if (_exit isEqualTo 2) exitWith { _display closeDisplay 1; };
{ctrlDelete _x;} count MAV_guiNavigation_Controls; MAV_guiNavigation_Controls = []; ["refreshControls", [_display]] call MAV_guiNavigation; }; case "refreshControls": { _params params [ ["_display", displayNull, [displayNull]] ]; private _group = _display displayCtrl 0x01; { _x params ["_title", "_image", "_condition", "_action"]; private _cond = call compile _condition; private _btn = _display ctrlCreate ["RscActivePictureKeepAspect", -1, _group]; MAV_guiNavigation_Controls pushBack _btn; _btn ctrlSetPosition [(_forEachIndex * ((6 * 6) + 2)) * (pixelW * pixelGrid * 0.50), 0, (6 * 6) * (pixelW * pixelGrid * 0.50), (6 * 6) * (pixelH * pixelGrid * 0.50)]; _btn ctrlCommit 0; _btn ctrlSetTextColor ([[1, 1, 1, 0.3], [1, 1, 1, 0.7]] select _cond); _btn ctrlSetText _image; _btn ctrlSetTooltip _title; _btn ctrlAddEventHandler ["ButtonClick", _action]; _btn ctrlEnable _cond; } forEach getArray (missionConfigFile >> "maverick_navigation_cfg" >> "option_list"); if ((count MAV_guiNavigation_Controls) <= 5) then { (_display displayCtrl 0x03) ctrlShow true; }; }; case "onUnload": { MAV_guiNavigation_Controls = nil; }; };
