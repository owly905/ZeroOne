
















































































































































































































































































disableSerialization; params [ ["_mode", "", [""]], ["_params", [], [[]]] ]; switch _mode do { case "onLoad": { _params params [ ["_display", displayNull, [displayNull]] ]; MAV_guiNavigationNew_Spam = diag_tickTime; MAV_guiNavigationNew_Tab = 0; MAV_guiNavigationNew_Info = [objNull, objNull, objNull, []]; private _world = toLower worldName; _display displayAddEventHandler ["ChildDestroyed", {["childDestroyed", _this] call MAV_guiNavigationNew}]; private _close = _display displayCtrl 0x02; _close ctrlAddEventHandler ["ButtonClick", {ctrlParent (_this select 0) closeDisplay 0;}]; private _tabs = _display displayCtrl 0x03; _tabs ctrlAddEventHandler ["ToolBoxSelChanged", {["tabChanged", _this] call MAV_guiNavigationNew}]; private _map = _display displayCtrl 0x04; _map ctrlAddEventHandler ["Draw", {["mapDraw", _this] call MAV_guiNavigationNew}]; _map ctrlAddEventHandler ["MouseButtonDblClick", {["mapDblClick", _this] call MAV_guiNavigationNew}]; private _commonList = _display displayCtrl 0x05; _commonList ctrlAddEventHandler ["LBSelChanged", {["commonLocations", _this] call MAV_guiNavigationNew}]; private _currentLocationIndex = _commonList lbAdd ( toUpper (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgCurrentLocation")) ); _commonList lbSetData [ _currentLocationIndex, str( [ toUpper (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgCurrentLocation")), getPosATL player] ) ]; private _nearestRoad = [getPos player, 100, []] call BIS_fnc_nearestRoad; private _showEndTab = false; if (!isNull _nearestRoad) then { MAV_guiNavigationNew_Info = [_nearestRoad, objNull, objNull, []]; _showEndTab = true; }; { _x params ["_title", "_location"]; private _index = _commonList lbAdd (toUpper _title); _commonList lbSetData [_index, str _x]; false } count (getArray (missionConfigFile >> "maverick_navigation_cfg" >> "presets" >> worldName >> "presetLocations")); private _savedList = _display displayCtrl 0x06; _savedList ctrlAddEventHandler ["LBSelChanged", {["savedLocation", _this] call MAV_guiNavigationNew}]; { private _nr = _x; private _ret = profileNamespace getVariable [format ["MAV_gps_saved_%1_%2", _world, _nr], []]; if (!(_ret isEqualTo []) && {_ret isEqualTypeParams ["", [], []]}) then { _ret params ["_title", "_points", "_route"]; private _index = _savedList lbAdd _title; _savedList lbSetValue [_index, _nr]; _savedList lbSetData [_index, _title]; }; false } count [0, 1, 2, 3, 4]; private _newRoute = _display displayCtrl 0x01; _newRoute ctrlAddEventHandler ["ButtonClick", {["newRoute", _this] call MAV_guiNavigationNew}]; if (_showEndTab) then { _tabs lbSetCurSel 2; ["tabChanged", [_tabs, 2]] call MAV_guiNavigationNew; } else { ["tabChanged", [_tabs, 0]] call MAV_guiNavigationNew; }; }; case "tabChanged": { _params params [ ["_ctrl", controlNull, [controlNull]], ["_index", -1, [0]] ]; if (_index isEqualTo -1) exitWith {}; MAV_guiNavigationNew_Tab = _index; private _commonList = (ctrlParent _ctrl) displayCtrl 0x05; _commonList lbSetCurSel -1; }; case "childDestroyed": { _params params ["_display", "_child", "_exit"]; if (_exit isEqualTo 2) exitWith { _display closeDisplay 1; }; MAV_guiNavigationNew_Info = [objNull, objNull, []]; MAV_guiNavigationNew_Spam = diag_tickTime + 0.3; private _savedList = _display displayCtrl 0x06; _savedList lbSetCurSel -1; ["isValid", [_display]] call MAV_guiNavigationNew; }; case "mapDraw": { _params params [ ["_ctrl", controlNull, [controlNull]] ]; private _display = ctrlParent _ctrl; if (isNull _display || {!ctrlShown _ctrl}) exitWith {}; { private _location = _x; if !(isNull _location) then { private _pos = getPosWorld _location; _ctrl drawIcon [ ["\a3\ui_f\data\Map\MapControl\waypoint_CA.paa", "\a3\ui_f\data\Map\MapControl\waypoint_CA.paa", "\a3\ui_f\data\Map\MapControl\waypointcompleted_CA.paa"] select _forEachIndex, [1,0,0,1], _pos, 30, 30, 0, format ["%1 (%2)", [ (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgStart")), (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgCheckpoint")), (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgDestination")) ] select _forEachIndex, mapGridPosition _pos], 1.5, 0.06, "RobotoCondensed" ];
}; } forEach [MAV_guiNavigationNew_Info param [0], MAV_guiNavigationNew_Info param [1], MAV_guiNavigationNew_Info param [2]]; }; case "commonLocations": { _params params [ ["_ctrl", controlNull, [controlNull]], ["_index", -1, [0]] ]; if (_index isEqualTo -1) exitWith { MAV_guiNavigationNew_Info set [MAV_guiNavigationNew_Tab, objNull]; }; private _data = _ctrl lbData _index; if (_data isEqualTo "") exitWith {}; (parseSimpleArray _data) params ["_title", "_location"]; if (_location isEqualType "") then { _location = getMarkerPos _location; }; private _roads = _location nearRoads 350; if (_roads isEqualTo []) exitWith {(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgNoRoadsFound")) call zero_fnc_msg;}; _roads = _roads apply { [_x distance _location, _x] }; _roads sort true; private _road = ( _roads param [0] ) param [1, objNull]; if (isNull _road) exitWith {(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgInvalidRoadSegment")) call zero_fnc_msg;}; if ((roadsConnectedTo _road) isEqualTo []) exitWith {(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgInvalidRoadSegment")) call zero_fnc_msg;}; if !((MAV_guiNavigationNew_Info param [3]) isEqualTo []) then { MAV_guiNavigationNew_Info set [3, []]; }; MAV_guiNavigationNew_Info set [MAV_guiNavigationNew_Tab, _road]; ["isValid", [ctrlParent _ctrl]] call MAV_guiNavigationNew; }; case "savedLocation": { _params params [ ["_ctrl", controlNull, [controlNull]], ["_index", -1, [0]] ]; if (_index isEqualTo -1) exitWith { MAV_guiNavigationNew_Info = [objNull, objNull, objNull, []]; }; (profileNamespace getVariable [format ["MAV_gps_saved_%1_%2", toLower worldName, _ctrl lbValue _index], []]) params [ ["_title", "", [""]], ["_points", [], [[]]], ["_route", [], [[]]], ["_usedSearchType", "default", [""]] ]; private _pointsback = _points apply { if (_x isEqualTo []) then { objNull } else { (_x nearRoads 0.5) param [0, objNull] }; }; private _routeBack = _route apply { (_x nearRoads 0.5) param [0, objNull] }; _pointsback params ["_pointA", "_pointB", "_pointC"]; mav_gps_v_currentRouteSearchType = _usedSearchType; MAV_guiNavigationNew_Info = [_pointA, _pointB, _pointC, _routeBack]; ["isValid", [ctrlParent _ctrl]] call MAV_guiNavigationNew; }; case "mapDblClick": { if (MAV_guiNavigationNew_Spam > diag_tickTime) exitWith {}; MAV_guiNavigationNew_Spam = diag_tickTime + 0.5; _params params ["_ctrl", "_button", "_mouseX", "_mouseY"]; if !(_button isEqualTo 0) exitWith {}; private _pos = _ctrl ctrlMapScreenToWorld [_mouseX, _mouseY]; _pos pushBack 0; private _roads = _pos nearRoads 350; if (_roads isEqualTo []) exitWith {(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgNoRoadsFound")) call zero_fnc_msg;}; _roads = _roads apply { [_x distance _pos, _x] }; _roads sort true; private _road = ( _roads param [0] ) param [1, objNull]; if (isNull _road) exitWith {(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgInvalidRoadSegment")) call zero_fnc_msg;}; if ((roadsConnectedTo _road) isEqualTo []) exitWith {(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgInvalidRoadSegment")) call zero_fnc_msg;}; if !((MAV_guiNavigationNew_Info param [3]) isEqualTo []) then { MAV_guiNavigationNew_Info set [3, []]; }; MAV_guiNavigationNew_Info set [MAV_guiNavigationNew_Tab, _road]; ["isValid", [ctrlParent _ctrl]] call MAV_guiNavigationNew; }; case "isValid": { _params params [ ["_display", displayNull, [displayNull]] ]; MAV_guiNavigationNew_Info params ["_start", "_midpoint", "_destination"]; private _valid = (!isNull _midpoint && {!(_midpoint isEqualTo _destination) && {!(_midpoint isEqualTo _start)}}); (_display displayCtrl 0x01) ctrlShow (!isNull _start && {!isNull _destination} && {isNull _midpoint || {_valid}} && {!(_start isEqualTo _destination)}); }; case "newRoute": { if (MAV_guiNavigationNew_Spam > diag_tickTime) exitWith {}; MAV_guiNavigationNew_Spam = diag_tickTime + 0.5; _params params [ ["_ctrl", controlNull, [controlNull]] ]; private _display = ctrlParent _ctrl; _display createDisplay (["MAV_guiNavigationCalculateWO", "MAV_guiNavigationCalculate"] select (cbChecked (_display displayCtrl 0x07))); }; case "onUnload": { MAV_guiNavigationNew_Spam = nil; MAV_guiNavigationNew_Tab = nil; MAV_guiNavigationNew_Start = nil; MAV_guiNavigationNew_Destination = nil; }; };
