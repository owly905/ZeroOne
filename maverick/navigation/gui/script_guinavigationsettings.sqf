
















































































































































































































































































disableSerialization; params [ ["_mode", "", [""]], ["_params", [], [[]]] ]; switch _mode do { case "onLoad": { _params params [ ["_display", displayNull, [displayNull]] ]; MAV_guiNavigationSettings_Spam = diag_tickTime; MAV_guiNavigationSettings_color = ["color", [0.99, 0.49, 0, 1]] call MAV_gps_fnc_fetchSettings; MAV_guiNavigationSettings_path = ["path", 0] call MAV_gps_fnc_fetchSettings; MAV_guiNavigationSettings_distance = ["distance", 0] call MAV_gps_fnc_fetchSettings; mav_gps_v_settings_voiceChannel = ["voiceChannel"] call MAV_gps_fnc_fetchSettings; _display displayAddEventHandler ["ChildDestroyed", {["childDestroyed", _this] call MAV_guiNavigationSettings}]; private _close = _display displayCtrl 0x02; _close ctrlAddEventHandler ["ButtonClick", {ctrlParent (_this select 0) closeDisplay 0;}]; private _customize = _display displayCtrl 0x05; _customize ctrlAddEventHandler ["ButtonClick", {["customize", _this] call MAV_guiNavigationSettings}]; if !(isNil 'mav_gps_v_markers') then { _customize ctrlEnable false; _customize ctrlSetTooltip (getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgAbortCurrentRoute")); }; private _reset = _display displayCtrl 0x10; _reset ctrlAddEventHandler ["ButtonClick", {["reset", _this] call MAV_guiNavigationSettings}]; private _color = _display displayCtrl 0x06; _color ctrlSetTextColor MAV_guiNavigationSettings_Color; private _redSlider = _display displayCtrl 0x07; _redSlider sliderSetRange [1, 100]; _redSlider sliderSetSpeed [1, 1, 1]; _redSlider sliderSetPosition ((MAV_guiNavigationSettings_Color param [0]) * 100); _redSlider ctrlAddEventHandler ["SliderPosChanged", {["redSlider", _this] call MAV_guiNavigationSettings}]; private _greenSlider = _display displayCtrl 0x08; _greenSlider sliderSetRange [1, 100]; _greenSlider sliderSetSpeed [1, 1, 1]; _greenSlider sliderSetPosition ((MAV_guiNavigationSettings_Color param [1]) * 100); _greenSlider ctrlAddEventHandler ["SliderPosChanged", {["greenSlider", _this] call MAV_guiNavigationSettings}]; private _blueSlider = _display displayCtrl 0x09; _blueSlider sliderSetRange [1, 100]; _blueSlider sliderSetSpeed [1, 1, 1]; _blueSlider sliderSetPosition ((MAV_guiNavigationSettings_Color param [2]) * 100); _blueSlider ctrlAddEventHandler ["SliderPosChanged", {["blueSlider", _this] call MAV_guiNavigationSettings}]; private _distance = _display displayCtrl 0x03; _distance ctrlAddEventHandler ["LBSelChanged", {["distanceChanged", _this] call MAV_guiNavigationSettings}]; private _distanceCount = { private _index = _distance lbAdd (toUpper _x); true } count ["km/h", "mph"]; if ((MAV_guiNavigationSettings_distance + 1) > _distanceCount) then { MAV_guiNavigationSettings_distance = 0; }; _distance lbSetCurSel MAV_guiNavigationSettings_distance; private _path = _display displayCtrl 0x04; _path ctrlAddEventHandler ["LBSelChanged", {["pathChanged", _this] call MAV_guiNavigationSettings}]; private _pathCount = { private _index = _path lbAdd (toUpper _x); true } count ["default", "highway"]; if ((MAV_guiNavigationSettings_path + 1) > _pathCount) then { MAV_guiNavigationSettings_path = 0; }; _path lbSetCurSel MAV_guiNavigationSettings_path; private _save = _display displayCtrl 0x01; _save ctrlAddEventHandler ["ButtonClick", {["saveSettings", _this] call MAV_guiNavigationSettings}]; private _voiceSetting = _display displayCtrl 0x11; _voiceSetting ctrlAddEventHandler ["LBSelChanged", {["voiceChanged", _this] call MAV_guiNavigationSettings}]; _voiceSetting lbAdd "Disabled"; _voiceSetting lbSetData [(lbSize _voiceSetting) - 1, "disabled"];
private _allVoiceConfigs = "true" configClasses (missionConfigFile >> "maverick_navigation_cfg" >> "soundInstructions"); private _voiceSettingFound = false; { private _isValid = true; private _config = _x; { private _soundClassname = getText (_config >> _x); if !(isClass (missionConfigFile >> "CfgSounds" >> _soundClassname)) exitWith { _isValid = false; }; } forEach ["sound100mLeft", "soundNowLeft", "sound100mRight", "soundNowRight", "soundOnDestinationRoad", "soundDestinationReached", "soundFollowRoad"]; if (_isValid) then { _voiceSetting lbAdd (getText (_x >> "displayName")); _voiceSetting lbSetData [(lbSize _voiceSetting) - 1, configName _x]; if ((configName _x) isEqualTo mav_gps_v_settings_voiceChannel) then { _voiceSetting lbSetCurSel (_forEachIndex + 1); _voiceSettingFound = true; }; }; } forEach _allVoiceConfigs; if (!_voiceSettingFound) then { _voiceSetting lbSetCurSel 0; }; }; case "childDestroyed": { _params params ["_display", "_child", "_exit"]; MAV_guiNavigationSettings_Spam = diag_tickTime + 0.3; }; case "saveSettings": { if (MAV_guiNavigationSettings_Spam > diag_tickTime) exitWith {}; MAV_guiNavigationSettings_Spam = diag_tickTime + 0.5; _params params [ ["_ctrl", controlNull, [controlNull]] ]; private _display = ctrlParent _ctrl; { _x params ["_setting", "_value"]; [_setting, _value] call MAV_gps_fnc_saveSettings; } count [ ["color", MAV_guiNavigationSettings_color], ["path", MAV_guiNavigationSettings_path], ["distance", MAV_guiNavigationSettings_distance] ]; profileNamespace setVariable ["Map_Unknown_R", MAV_guiNavigationSettings_color param [0] ]; profileNamespace setVariable ["Map_Unknown_G", MAV_guiNavigationSettings_color param [1] ]; profileNamespace setVariable ["Map_Unknown_B", MAV_guiNavigationSettings_color param [2] ]; private _voiceSettingControl = (ctrlParent _ctrl) displayCtrl 0x11; ["voiceChannel", _voiceSettingControl lbData (lbCurSel _voiceSettingControl)] call MAV_gps_fnc_saveSettings; saveProfileNamespace; [(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgSettingsSaved")),-1] call zero_fnc_msg; }; case "redSlider": { _params params [ ["_ctrl", controlNull, [controlNull]], ["_pos", -1, [0]] ]; MAV_guiNavigationSettings_color set [0, _pos / 100]; ((ctrlParent _ctrl) displayCtrl 0x06) ctrlSetTextColor MAV_guiNavigationSettings_color; }; case "greenSlider": { _params params [ ["_ctrl", controlNull, [controlNull]], ["_pos", -1, [0]] ]; MAV_guiNavigationSettings_color set [1, _pos / 100]; ((ctrlParent _ctrl) displayCtrl 0x06) ctrlSetTextColor MAV_guiNavigationSettings_color; }; case "blueSlider": { _params params [ ["_ctrl", controlNull, [controlNull]], ["_pos", -1, [0]] ]; MAV_guiNavigationSettings_color set [2, _pos / 100]; ((ctrlParent _ctrl) displayCtrl 0x06) ctrlSetTextColor MAV_guiNavigationSettings_color; }; case "distanceChanged": { _params params [ ["_ctrl", controlNull, [controlNull]], ["_index", -1, [0]] ]; if (_index isEqualTo -1) exitWith {}; MAV_guiNavigationSettings_distance = _index; }; case "pathChanged": { _params params [ ["_ctrl", controlNull, [controlNull]], ["_index", -1, [0]] ]; if (_index isEqualTo -1) exitWith {}; MAV_guiNavigationSettings_path = _index; }; case "voiceChanged": { _params params [ ["_ctrl", controlNull, [controlNull]], ["_index", -1, [0]] ]; if (_index isEqualTo -1) exitWith {}; }; case "customize": { if (MAV_guiNavigationSettings_Spam > diag_tickTime) exitWith {}; MAV_guiNavigationSettings_Spam = diag_tickTime + 0.5; _params params [ ["_ctrl", controlNull, [controlNull]] ]; (ctrlParent _ctrl) createDisplay "MAV_guiNavigationResize"; }; case "reset": { if (MAV_guiNavigationSettings_Spam > diag_tickTime) exitWith {}; MAV_guiNavigationSettings_Spam = diag_tickTime + 0.5; _params params [ ["_ctrl", controlNull, [controlNull]] ]; ["gui", []] call MAV_gps_fnc_saveSettings; saveProfileNamespace; [(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgPositionReset")),-1] call zero_fnc_msg; }; case "onUnload": { MAV_guiNavigationSettings_Spam = nil; MAV_guiNavigationSettings_color = nil; MAV_guiNavigationSettings_path = nil; MAV_guiNavigationSettings_distance = nil; }; };
