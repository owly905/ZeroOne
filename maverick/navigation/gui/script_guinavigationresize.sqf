
















































































































































































































































































disableSerialization; params [ ["_mode", "", [""]], ["_params", [], [[]]] ]; switch _mode do { case "onLoad": { _params params [ ["_display", displayNull, [displayNull]] ]; MAV_guiNavigationResize_Spam = diag_tickTime; MAV_guiNavigationResize_position = ["gui", []] call MAV_gps_fnc_fetchSettings; if (MAV_guiNavigationResize_position isEqualTo []) then { private _test = []; _test append (("true" configClasses (missionConfigFile >> "MAV_guiNavigationResize" >> "ControlsBackground")) apply {[getNumber (_x >> "x"), getNumber (_x >> "y"), getNumber (_x >> "w"), getNumber (_x >> "h")]}); _test append (("true" configClasses (missionConfigFile >> "MAV_guiNavigationResize" >> "Controls")) apply {[getNumber (_x >> "x"), getNumber (_x >> "y"), getNumber (_x >> "w"), getNumber (_x >> "h")]}); MAV_guiNavigationResize_position = _test;
} else { { private _ctrl = _x; _ctrl ctrlSetPosition (MAV_guiNavigationResize_position select _forEachIndex); _ctrl ctrlCommit 0; } forEach (allControls _display); }; _display displayAddEventHandler ["KeyDown", {["KeyDown", _this] call MAV_guiNavigationResize}]; [(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgPressSpace")),-1,-1,4,1] spawn BIS_fnc_dynamicText; }; case "KeyDown": { _params params [ ["_display", displayNull, [displayNull]], ["_keyCode", -1, [0]] ]; if (_keyCode isEqualTo 0x39 && {diag_tickTime > MAV_guiNavigationResize_Spam}) then { MAV_guiNavigationResize_Spam = diag_tickTime + 1; MAV_guiNavigationResize_position = (allControls _display) apply {ctrlPosition _x}; ["gui", MAV_guiNavigationResize_position] call MAV_gps_fnc_saveSettings; saveProfileNamespace; _display closeDisplay 1; [(getText(missionConfigFile >> "maverick_navigation_cfg" >> "localization" >> "msgGpsPosSaved")),1] call zero_fnc_msg; }; }; case "onUnload": { [""] spawn BIS_fnc_dynamicText; MAV_guiNavigationResize_position = nil; MAV_guiNavigationResize_Spam = nil; }; };
